(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{509:function(_,v,t){"use strict";t.r(v);var c=t(54),a=Object(c.a)({},(function(){var _=this,v=_.$createElement,t=_._self._c||v;return t("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[t("h1",{attrs:{id:"操作系统"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#操作系统"}},[_._v("#")]),_._v(" 操作系统")]),_._v(" "),t("h2",{attrs:{id:"_1、-弱弱的问一问-要操作系统干嘛"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1、-弱弱的问一问-要操作系统干嘛"}},[_._v("#")]),_._v(" 1、 弱弱的问一问: 要操作系统干嘛？")]),_._v(" "),t("p",[_._v("这里先不讲"),t("code",[_._v("操作系统")]),_._v("的概念了，因为文字太生硬了，我们只需要看一个简单的例子：")]),_._v(" "),t("ul",[t("li",[_._v("在我们的 JS 代码里，只需要输入 "),t("code",[_._v("console.log(1+1)")]),_._v("; 就可以在浏览器面板中看到"),t("code",[_._v("2")]),_._v("，这其中发生了什么事情呢?(简单扫一眼)")]),_._v(" "),t("li",[_._v("首先键盘输入代码"),t("code",[_._v("1+1")]),_._v("到显示器输出"),t("code",[_._v("2")]),_._v(", 需要"),t("code",[_._v("CPU")]),_._v("控制键盘（输入设备） ，将获取的"),t("code",[_._v("1+1")]),_._v("指令放入内存")]),_._v(" "),t("li",[_._v("然后 CPU 的控制器从内存中取出指令，并分析出指令是让计算机做一个"),t("code",[_._v("1+1")]),_._v("的加法运算")]),_._v(" "),t("li",[_._v("此时 CPU 的控制将控制 CPU 的运算器做"),t("code",[_._v("1+1")]),_._v("的加法运算，并得出结果"),t("code",[_._v("2")])]),_._v(" "),t("li",[_._v("最后 CPU 控制器控制运算器将结果返给内存，内存也在 CPU 控制器的控制下，将结果"),t("code",[_._v("2")]),_._v("返回给屏幕（输出设备）")])]),_._v(" "),t("p",[_._v("好了，这里问题是，如果没有操作系统，一个简单的 1+1 运算，你的 js 代码还需要考虑这些硬件的协调工作，比如你的代码要协调 CPU 资源什么时候读取你的代码，什么时候把进程切换到别的进程。。。这些脏活累活都是操作系统帮你屏蔽了，要不这代码可咋写啊。。。")]),_._v(" "),t("p",[t("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/625bd319664a4c47ac3e09c42af27648~tplv-k3u1fbpfcp-zoom-in-crop-mark:1304:0:0:0.awebp",alt:"img"}})]),_._v(" "),t("h3",{attrs:{id:"弱弱的问一问-前端学这个干嘛"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#弱弱的问一问-前端学这个干嘛"}},[_._v("#")]),_._v(" 弱弱的问一问: 前端学这个干嘛？")]),_._v(" "),t("p",[_._v("很早以前看朴零大神的《深入浅出 NodeJS》的时候，讲到进程间通信，有一句大概说，windows 平台进程间通信用的是管道，linux 平台用的是 domain socket，我一看就傻眼了，啥是进程间通信？啥是管道？啥是 domain socket？😭 看不懂啊.... 这些都是跟操作系统进程的知识相关）。")]),_._v(" "),t("p",[_._v("啥也了不说了，兄弟，学习的小车已经粗发了！")]),_._v(" "),t("p",[t("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/bed1a16e29e94f2493459b2ac958daa1~tplv-k3u1fbpfcp-zoom-in-crop-mark:1304:0:0:0.awebp",alt:"img"}})]),_._v(" "),t("h2",{attrs:{id:"_2、操作系统运行机制和体系结构"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2、操作系统运行机制和体系结构"}},[_._v("#")]),_._v(" 2、操作系统运行机制和体系结构")]),_._v(" "),t("p",[_._v("预备知识： 什么是指令（更详细内容请看我的计算机组成原理文章）")]),_._v(" "),t("p",[_._v("比如说，如下图（简单扫一下即可）：")]),_._v(" "),t("p",[t("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/b7e94d10138444fca675d3e78771cd3d~tplv-k3u1fbpfcp-zoom-in-crop-mark:1304:0:0:0.awebp",alt:"img"}})]),_._v(" "),t("p",[_._v("a+b 是一段程序代码，a+b 在 CPU 看来并不能一步完成，可以翻译成如下：")]),_._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[_._v("// 意思是将内存的16号单元数据，放到A寄存器，\nLOAD A, 16\n// 意思是将内存的16号单元数据，放到B寄存器\nLOAD B, 17\n// 存器里的A,B数据相加，得到C\nADD C, A, B\n复制代码\n")])])]),t("p",[_._v("这里就可以看得出来，指令是"),t("code",[_._v("CPU")]),_._v("能"),t("code",[_._v("识别")]),_._v("和"),t("code",[_._v("执行")]),_._v("的最基本命令。")]),_._v(" "),t("h4",{attrs:{id:"_2-1-两种指令、两种处理器状态、两种程序"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-两种指令、两种处理器状态、两种程序"}},[_._v("#")]),_._v(" 2.1 两种指令、两种处理器状态、两种程序")]),_._v(" "),t("p",[_._v("假如说一个用户可以随意把服务器上的所有文件删光，这是很危险的。所以有些指令普通用户是不能使用的，只能是"),t("code",[_._v("权限较高")]),_._v("的用户能使用。此时指令就分为了两种，如下图：")]),_._v(" "),t("p",[t("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/c63454bc3f6d47ada18e16ac8b1448bb~tplv-k3u1fbpfcp-zoom-in-crop-mark:1304:0:0:0.awebp",alt:"img"}})]),_._v(" "),t("p",[_._v("这就引出一个问题：CPU"),t("code",[_._v("如何判断")]),_._v("当前是否可以执行"),t("code",[_._v("特权指令")]),_._v("？ 如下图: "),t("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/5ffec6ba8bb84fd3b671562ddaa4dd3a~tplv-k3u1fbpfcp-zoom-in-crop-mark:1304:0:0:0.awebp",alt:"img"}}),_._v(" CPU 通常有两种工作模式即："),t("code",[_._v("内核态")]),_._v("和"),t("code",[_._v("用户态")]),_._v("，而在 PSW（这个不用管，就知道有一个寄存器的标志位 0 表示用户态，1 表示核心态）中有一个二进制位控制这两种模式。")]),_._v(" "),t("p",[_._v("对于应用程序而言，有的程序能执行特权指令，有的程序只能执行非特权指令。所以操作系统里的程序又分为两种：")]),_._v(" "),t("p",[t("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/5e2b1d866079496989d6aa802976c718~tplv-k3u1fbpfcp-zoom-in-crop-mark:1304:0:0:0.awebp",alt:"img"}})]),_._v(" "),t("h4",{attrs:{id:"_2-2-操作系统内核简单介绍"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-操作系统内核简单介绍"}},[_._v("#")]),_._v(" 2.2 操作系统内核简单介绍")]),_._v(" "),t("p",[_._v("从下图，我们先看看操作系统内核包含哪些")]),_._v(" "),t("p",[t("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/7aad0ff1519c45e88923eac0ca186ff1~tplv-k3u1fbpfcp-zoom-in-crop-mark:1304:0:0:0.awebp",alt:"img"}})]),_._v(" "),t("p",[_._v("操作系统内核中跟硬件紧密相关的部分有：")]),_._v(" "),t("ul",[t("li",[_._v("时钟管理。操作系统的时钟管理是依靠"),t("code",[_._v("硬件定时器")]),_._v("的（具体硬件怎么实现我也不太清楚，好像是靠硬件周期性的产生一个脉冲信号实现的）。时钟管理相当重要，比如我们"),t("code",[_._v("获取时间信息")]),_._v("，"),t("code",[_._v("进程切换")]),_._v("等等都是要依靠时钟管理。")]),_._v(" "),t("li",[_._v("中断处理（下一小节会详细介绍）。")]),_._v(" "),t("li",[_._v("原语（后面会有案例提到）。现在可以简单理解为用来实现某个特定功能，在执行过程中"),t("code",[_._v("不可被中断")]),_._v("的指令集合。原语有一个非常重要的特性，就是原子性（其运行"),t("code",[_._v("一气呵成，不可中断")]),_._v("）。")])]),_._v(" "),t("h4",{attrs:{id:"_2-3-中断"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-中断"}},[_._v("#")]),_._v(" 2.3 中断")]),_._v(" "),t("ul",[t("li",[_._v("在程序运行过程中，系统出现了一个必须由 CPU 立即处理的情况，此时，CPU"),t("code",[_._v("暂时中止程序的执行")]),_._v("转而"),t("code",[_._v("处理这个新的情况")]),_._v("的过程就叫做"),t("code",[_._v("中断")]),_._v("。")])]),_._v(" "),t("p",[_._v("下面举一个例子：")]),_._v(" "),t("p",[t("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/bbb1d6ab19194af0990f24f1d4f3b54c~tplv-k3u1fbpfcp-zoom-in-crop-mark:1304:0:0:0.awebp",alt:"img"}}),_._v(" 第一个应用程序在用户态执行了一段时间后 "),t("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/62afac3d324d4d4db8a4e6e594861cfd~tplv-k3u1fbpfcp-zoom-in-crop-mark:1304:0:0:0.awebp",alt:"img"}}),_._v(" 接着操作系统切换到核心态，处理中断信号 "),t("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/ff2fa4931c914df39b70b5165d50e5d4~tplv-k3u1fbpfcp-zoom-in-crop-mark:1304:0:0:0.awebp",alt:"img"}})]),_._v(" "),t("ul",[t("li",[_._v("操作系统发现"),t("code",[_._v("中断的信号")]),_._v("是第一个程序的时间片（每个程序不能一直执行，CPU 会给每个程序一定的执行时间，这段时间就是时间片）用完了，应该换第二个应用程序执行了")]),_._v(" "),t("li",[_._v("切换到"),t("code",[_._v("第2个进程")]),_._v("后，操作系统会将"),t("code",[_._v("CPU")]),_._v("的"),t("code",[_._v("使用权")]),_._v("交换给第二个应用程序，接着第二个应用程序就在"),t("code",[_._v("用户态")]),_._v("下开始执行。")]),_._v(" "),t("li",[t("code",[_._v("进程")]),_._v("2 需要调用"),t("code",[_._v("打印机资源")]),_._v("，这时会执行一个"),t("code",[_._v("系统调用")]),_._v("（后面会讲系统调用，这里简单理解为需要操作系统进入核心态处理的函数），让操作系统进入核心态，去调用打印机资源")]),_._v(" "),t("li",[_._v("打印机开始工作，"),t("code",[_._v("此时进程2")]),_._v("因为要等待打印机启动，操作系统就不等待了（等到打印机准备好了，再回来执行程序 2），直接切换到"),t("code",[_._v("第三个应用程序")]),_._v("执行")]),_._v(" "),t("li",[_._v("等到打印机准备好了，此时打印机通过 I/O 控制器会给操作系统发出一"),t("code",[_._v("个中断信号")]),_._v("，操作系统又进入到核心态，发现这个中断是因为"),t("code",[_._v("程序2")]),_._v("等待打印机资源，现在打印机准备好了，就切换到"),t("code",[_._v("程序2")]),_._v("，切换到"),t("code",[_._v("用户态")]),_._v("，把 CPU 给程序 2 继续执行。")])]),_._v(" "),t("p",[_._v("好了，现在可以给出一个结论，就是用户态、核心态之间的切换是怎么实现的?")]),_._v(" "),t("ul",[t("li",[_._v('"用户态 ---\x3e 核心态"是通过中断实现的。'),t("code",[_._v("并且中断时唯一途径")]),_._v("。")]),_._v(" "),t("li",[_._v('"核心态 ---\x3e 用户态"的切换时通过执行一个特权指令，将程序状态的标志位设为用户态。')])]),_._v(" "),t("h4",{attrs:{id:"_2-4-中断的分类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-中断的分类"}},[_._v("#")]),_._v(" 2.4 中断的分类")]),_._v(" "),t("p",[_._v("举一个例子，什么是内中断和外中断：")]),_._v(" "),t("p",[_._v("接着说之前的范桶同学，小时候不爱学习，每次学习着学习着突然异想天开，回过神来已经过好好长一段时间，这是"),t("code",[_._v("内部中断")]),_._v("。想着想着老师走过来，给了范捅一嘴巴，这是"),t("code",[_._v("外部中断")]),_._v("。")]),_._v(" "),t("p",[_._v("官方解释如下： "),t("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/6dcf78ddde4945f0b93f7d55952f64da~tplv-k3u1fbpfcp-zoom-in-crop-mark:1304:0:0:0.awebp",alt:"img"}})]),_._v(" "),t("ul",[t("li",[_._v("内中断常见的情况如"),t("code",[_._v("程序非法操作")]),_._v("(比如你要拿的的数据的内存地址不是内存地址，是系统无法识别的地址)，"),t("code",[_._v("地址越界")]),_._v("(比如系统给你的程序分配了一些内存，但是你访问的时候超出了你应该访问的内存范围)、"),t("code",[_._v("浮点溢出")]),_._v("(比如系统只能表示 1.1 到 5.1 的范围，你输入一个 100, 超出了计算机能处理的范围)，或者"),t("code",[_._v("异常")]),_._v("，"),t("code",[_._v("陷入trap")]),_._v("（是指应用程序请求系统调用造成的，什么是系统调用，后面小节会举例讲）。")]),_._v(" "),t("li",[_._v("外中断常见的情况如"),t("code",[_._v("I/O中断")]),_._v("（由 I/O 控制器产生，用于发送信号通知操作完成等信号，比如进程需要请求打印机资源，打印机有一个启动准备的过程，准备好了就会给 CPU 一个 I/O 中断，告诉它已经准备好了）、"),t("code",[_._v("时钟中断")]),_._v("（由处理器内部的计时器产生，允许操作系统以一定规程执行函数，操作系统每过大约 15ms 会进行一次线程调度，就是利用时钟中断来实现的）。")])]),_._v(" "),t("h4",{attrs:{id:"_2-5-系统调用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-5-系统调用"}},[_._v("#")]),_._v(" 2.5 系统调用")]),_._v(" "),t("blockquote",[t("p",[_._v("为什么需要系统调用？")])]),_._v(" "),t("ul",[t("li",[_._v("比如你的程序需要"),t("code",[_._v("读取文件信息")]),_._v("，可读取文件属于"),t("code",[_._v("读取硬盘里的数")]),_._v("据，这个操作应该时 CPU 在"),t("code",[_._v("内核态")]),_._v("去完成的，我们的应用程序怎么让 CPU 去帮助我们切换到内核态完成这个工作呢，这里就需要"),t("code",[_._v("系统调用了")]),_._v("。")]),_._v(" "),t("li",[_._v("这里就引出系统调用的概念和作用。")]),_._v(" "),t("li",[_._v("应用程序"),t("code",[_._v("通过系统调用请求操作系统的服务")]),_._v("。系统中的各种共享资源都由操作系统统一管理，因此在用户程序中，凡是与"),t("code",[_._v("资源有关的操作")]),_._v("（如存储分配、I/O 操作、文件管理等），都"),t("code",[_._v("必须")]),_._v("通过系统调用的方式向操作系统提出服务请求，由操作系统代为完成。")])]),_._v(" "),t("p",[_._v("以下内容简单看一下即可，系统调用的分类：")]),_._v(" "),t("p",[t("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/63e2b27cc0914088a2d0357ab332ade7~tplv-k3u1fbpfcp-zoom-in-crop-mark:1304:0:0:0.awebp",alt:"img"}})]),_._v(" "),t("p",[_._v("需要注意的是，"),t("code",[_._v("库函数")]),_._v("和"),t("code",[_._v("系统调用")]),_._v("容易混淆。")]),_._v(" "),t("ul",[t("li",[_._v("库是可重用的模块 "),t("code",[_._v("处于用户态")])]),_._v(" "),t("li",[_._v("进程通过系统调用从用户态进入"),t("code",[_._v("内核态")]),_._v("， 库函数中有很大部分是对系统调用的封装")])]),_._v(" "),t("p",[_._v("举个例子：比如"),t("code",[_._v("windows")]),_._v("和"),t("code",[_._v("linux")]),_._v("中，创建进程的系统调用方法是不一样的。 但在 node 中的只需要调用相同函数方法就可以创建一个进程。例如")]),_._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[_._v("// 引入创建子进程的模块\nconst childProcess = require('child_process')\n// 获取cpu的数量\nconst cpuNum = require('os').cpus().length\n\n// 创建与cpu数量一样的子进程\nfor (let i = 0; i < cpuNum; ++i) {\n  childProcess.fork('./worker.js')\n}\n复制代码\n")])])]),t("h4",{attrs:{id:"_2-6-进程的定义、组成、组织方式、状态与转换"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-6-进程的定义、组成、组织方式、状态与转换"}},[_._v("#")]),_._v(" 2.6 进程的定义、组成、组织方式、状态与转换")]),_._v(" "),t("h5",{attrs:{id:"_2-6-1-为什么要引入进程的概念呢"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-6-1-为什么要引入进程的概念呢"}},[_._v("#")]),_._v(" 2.6.1 为什么要引入进程的概念呢？")]),_._v(" "),t("ul",[t("li",[_._v("早期的计算机只支持"),t("code",[_._v("单道程序")]),_._v("（是指所有进程一个一个排队执行，A 进程执行时，CPU、内存、I/O 设备全是 A 进程控制的，等 A 进程执行完了，才换 B 进程，然后对应的资源比如 CPU、内存这些才能换 B 用）。")])]),_._v(" "),t("p",[t("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/85d60c74edfc4e9485fba703f52dd97e~tplv-k3u1fbpfcp-zoom-in-crop-mark:1304:0:0:0.awebp",alt:"img"}})]),_._v(" "),t("ul",[t("li",[_._v("现代计算机是"),t("code",[_._v("多道程序")]),_._v("执行，就是同时看起来有多个程序在一起执行，那每个程序执行都需要系统分配给它资源来执行，比如"),t("code",[_._v("CPU")]),_._v("、"),t("code",[_._v("内存")]),_._v("。")]),_._v(" "),t("li",[_._v("拿内存来说，操作系统要知道给 A 程序分配的内存有哪些，给 B 程序分配的内存有哪些，这些都要有小本本记录下来，这个小本本就是进程的一部分，进程的一大职责就是"),t("code",[_._v("记录目前程序运行的状态")]),_._v("。")]),_._v(" "),t("li",[_._v("系统为每个运行的程序配置一个数据结构，称为"),t("code",[_._v("进程控制块")]),_._v("（PCB），用来描述进程的各种信息（比如代码段放在哪）。")])]),_._v(" "),t("h5",{attrs:{id:"_2-6-2-进程的定义"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-6-2-进程的定义"}},[_._v("#")]),_._v(" 2.6.2 进程的定义？")]),_._v(" "),t("p",[_._v("简要的说，进程就是具有"),t("code",[_._v("独立功能的程序")]),_._v("在数据集合上"),t("code",[_._v("运行的过程")]),_._v("。(强调动态性)")]),_._v(" "),t("h5",{attrs:{id:"_2-6-3-pcb-有哪些组成"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-6-3-pcb-有哪些组成"}},[_._v("#")]),_._v(" 2.6.3 PCB 有哪些组成")]),_._v(" "),t("p",[_._v("如下图，分别说明一下 "),t("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/fad302f1961248dc8489739fd8e28c46~tplv-k3u1fbpfcp-zoom-in-crop-mark:1304:0:0:0.awebp",alt:"img"}})]),_._v(" "),t("ul",[t("li",[t("code",[_._v("进程标识符PID")]),_._v("相当于身份证。是在进程被创建时，操作系统会为该进程分配一个唯一的、不重复的 ID，"),t("code",[_._v("用于区分不同的进程")]),_._v("。")]),_._v(" "),t("li",[_._v("用户标识符"),t("code",[_._v("UID")]),_._v("用来表示这个进程"),t("code",[_._v("所属的用户")]),_._v("是谁。")]),_._v(" "),t("li",[_._v("进程当前状态和优先级下一小节会详细介绍")]),_._v(" "),t("li",[_._v("程序段指针是指当前进程的程序在"),t("code",[_._v("内存的什么地方")]),_._v("。")]),_._v(" "),t("li",[_._v("数据段指针是指当前进程的数据在"),t("code",[_._v("内存的什么地方")]),_._v("。")]),_._v(" "),t("li",[_._v("键盘和鼠标是指进程被"),t("code",[_._v("分配得到的I/O设备")]),_._v("。")]),_._v(" "),t("li",[_._v("各种寄存器值是指比如把程序计数器的值，比如有些计算的结果算到一半，进程切换时需要把这些值保存下来。")])]),_._v(" "),t("h5",{attrs:{id:"_2-6-4-进程的组织"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-6-4-进程的组织"}},[_._v("#")]),_._v(" 2.6.4 进程的组织")]),_._v(" "),t("p",[_._v("在一个系统中，通常由数十、数百乃至数千个"),t("code",[_._v("PCB")]),_._v("。为了对他们加以有效的管理，应该用适当的方式把这些 PCB 组织起来。这里介绍一种组织方式，类似数据结构里的链表。")]),_._v(" "),t("p",[t("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/80201fdf7ce242f18174dcb18ff4b833~tplv-k3u1fbpfcp-zoom-in-crop-mark:1304:0:0:0.awebp",alt:"img"}})]),_._v(" "),t("h5",{attrs:{id:"_2-6-5-进程的状态"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-6-5-进程的状态"}},[_._v("#")]),_._v(" 2.6.5 进程的状态")]),_._v(" "),t("p",[t("code",[_._v("进程是程序的一次执行。")]),_._v("在这个执行过程中，有时进程正在"),t("code",[_._v("被CPU处理")]),_._v("，有时又需要"),t("code",[_._v("等待CPU服务")]),_._v("，可见，进程的 状态是会有各种变化。为了方便对各个进程的管理，操作系统需要将进程合理地划分为几种状态。")]),_._v(" "),t("p",[_._v("进程的三种基本状态：")]),_._v(" "),t("p",[t("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/7b732a28a9ad435f8f20b365edd08916~tplv-k3u1fbpfcp-zoom-in-crop-mark:1304:0:0:0.awebp",alt:"img"}})]),_._v(" "),t("p",[_._v("进程的另外两种状态：")]),_._v(" "),t("p",[t("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/1cea105addf6473da486e64fe6b9be56~tplv-k3u1fbpfcp-zoom-in-crop-mark:1304:0:0:0.awebp",alt:"img"}})]),_._v(" "),t("h5",{attrs:{id:"_2-6-6-进程状态的转换"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-6-6-进程状态的转换"}},[_._v("#")]),_._v(" 2.6.6 进程状态的转换")]),_._v(" "),t("p",[_._v("进程的状态并不是一成不变的，在一定情况下会动态转换。")]),_._v(" "),t("p",[t("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/e3ce930479dc4ba0a6fb021198de671d~tplv-k3u1fbpfcp-zoom-in-crop-mark:1304:0:0:0.awebp",alt:"img"}})]),_._v(" "),t("p",[_._v("以上的这些进程状态的转换是如何实现的呢，这就要引出下一个角色了，叫`原语。")]),_._v(" "),t("ul",[t("li",[_._v("原语是"),t("code",[_._v("不可被中断")]),_._v("的原子操作。我们举一个例子看看原语是怎么保证不可中断的。")])]),_._v(" "),t("p",[t("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/ca6a27dd09f14178870960ad305ae3ed~tplv-k3u1fbpfcp-zoom-in-crop-mark:1304:0:0:0.awebp",alt:"img"}}),_._v(" 原语采用"),t("code",[_._v("关中断指令")]),_._v("和"),t("code",[_._v("开中断指令")]),_._v("实现。")]),_._v(" "),t("ul",[t("li",[_._v("首先执行关中断指令")]),_._v(" "),t("li",[_._v("然后外部来了中断信号，不予以处理")]),_._v(" "),t("li",[_._v("等到开中断指令执行后，其他中断信号才有机会处理。")])]),_._v(" "),t("h4",{attrs:{id:"_2-6-进程的通信"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-6-进程的通信"}},[_._v("#")]),_._v(" 2.6 进程的通信")]),_._v(" "),t("blockquote",[t("p",[_._v("为什么需要进程间通信呢？")])]),_._v(" "),t("p",[_._v("因为进程是"),t("code",[_._v("分配系统资源的单位")]),_._v("（包括内存地址空间），因此各进程拥有的内存地址空间相互独立。")]),_._v(" "),t("p",[t("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/763951d99b6a4ba3992415554d9fec2e~tplv-k3u1fbpfcp-zoom-in-crop-mark:1304:0:0:0.awebp",alt:"img"}})]),_._v(" "),t("h5",{attrs:{id:"_2-6-1-进程通信方法-共享存储"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-6-1-进程通信方法-共享存储"}},[_._v("#")]),_._v(" 2.6.1 进程通信方法---共享存储")]),_._v(" "),t("p",[_._v("因为两个进程的存储空间"),t("code",[_._v("不能相互访问")]),_._v("，所以操作系统就提供的一个内存空间让彼此都能访问，这就是共享存储的原理。 "),t("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/ca7157b11dd74f8e90dd42f9b5dd9cf4~tplv-k3u1fbpfcp-zoom-in-crop-mark:1304:0:0:0.awebp",alt:"img"}})]),_._v(" "),t("p",[_._v("其中，介绍一下基于存储区的共享。")]),_._v(" "),t("ul",[t("li",[_._v("在内存中画出一块"),t("code",[_._v("共享存储区")]),_._v("，数据的形式、存放位置都是由进程控制，而不是操作系统。")])]),_._v(" "),t("h5",{attrs:{id:"_2-6-2-进程通信方法-管道"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-6-2-进程通信方法-管道"}},[_._v("#")]),_._v(" 2.6.2 进程通信方法---管道")]),_._v(" "),t("p",[t("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/36e3b665bee04bcfbb0a20c359f76c3c~tplv-k3u1fbpfcp-zoom-in-crop-mark:1304:0:0:0.awebp",alt:"img"}})]),_._v(" "),t("ul",[t("li",[_._v("管道数据是以"),t("code",[_._v("字符流")]),_._v("（注意不是字节流）的形式写入管道，当管道写满时，写进程的"),t("code",[_._v("write()")]),_._v("系统调用将被阻塞，等待读进程将数据取走。当读进程将数据全部取走后，管道变空，此时读进程的"),t("code",[_._v("read()")]),_._v("系统调用将被阻塞。")]),_._v(" "),t("li",[_._v("如果没写满就不允许读。如果都没空就不允许写。")]),_._v(" "),t("li",[_._v("数据一旦被读出，就从管道中被丢弃，这就意味着"),t("code",[_._v("读进程")]),_._v("最多只能有一个。")])]),_._v(" "),t("h5",{attrs:{id:"_2-6-3-进程通信方法-消息传递"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-6-3-进程通信方法-消息传递"}},[_._v("#")]),_._v(" 2.6.3 进程通信方法---消息传递")]),_._v(" "),t("p",[_._v("进程间的数据交换以"),t("code",[_._v("格式化的消息")]),_._v("为单位。进程通过操作系统提供的"),t("code",[_._v('"发送消息/接收消息"')]),_._v("两个原语进行数据交换。")]),_._v(" "),t("p",[_._v("其中消息是什么意思呢？就好像你发 QQ 消息，消息头的来源是你，消息体是你发的内容。如下图：")]),_._v(" "),t("p",[t("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/66fee389dbd44c39b57d3883ec13f441~tplv-k3u1fbpfcp-zoom-in-crop-mark:1304:0:0:0.awebp",alt:"img"}})]),_._v(" "),t("p",[_._v("接下来我们介绍一种"),t("code",[_._v("间接通信")]),_._v("的方式（很像中介者模式或者发布订阅模式）, 如下图：中介者是信箱，进程通过它来收发消息。")]),_._v(" "),t("p",[t("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/5c7ab1f18d704b9fbcebef25447cbc80~tplv-k3u1fbpfcp-zoom-in-crop-mark:1304:0:0:0.awebp",alt:"img"}})]),_._v(" "),t("h4",{attrs:{id:"_2-7-线程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-7-线程"}},[_._v("#")]),_._v(" 2.7 线程")]),_._v(" "),t("blockquote",[t("p",[_._v("为什么要引入线程呢？")])]),_._v(" "),t("ul",[t("li",[_._v("比如你在玩 QQ 的时候，QQ 是一个进程，如果 QQ 的进程里没有多线程并发，那么 QQ 进程就只能"),t("code",[_._v("同一时间做一件事情")]),_._v("（比如 QQ 打字聊天）")]),_._v(" "),t("li",[_._v("但是我们真实的场景是 QQ 聊天的同时，还可以发文件，还可以视频聊天，这说明如果 QQ"),t("code",[_._v("没有多线程并发能力")]),_._v("，QQ 能够的实用性就大大降低了。所以我们"),t("code",[_._v("需要线程")]),_._v("，也就是"),t("code",[_._v("需要进程拥有能够并发")]),_._v("多个事件的能力。")])]),_._v(" "),t("p",[t("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/30a1f85b6c474ed794feaa05d758341a~tplv-k3u1fbpfcp-zoom-in-crop-mark:1304:0:0:0.awebp",alt:"img"}})]),_._v(" "),t("p",[_._v("引入线程后带来的变化 "),t("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/b2eeee2b2646477ea6806ca40e8cb1f6~tplv-k3u1fbpfcp-zoom-in-crop-mark:1304:0:0:0.awebp",alt:"img"}})]),_._v(" "),t("h2",{attrs:{id:"_3、-进程的同步和互斥"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3、-进程的同步和互斥"}},[_._v("#")]),_._v(" 3、 进程的同步和互斥")]),_._v(" "),t("blockquote",[t("p",[_._v("同步。是指多个进程中发生的事件存在某种先后顺序。即某些进程的执行必须先于另一些进程。")])]),_._v(" "),t("p",[_._v("比如说"),t("code",[_._v("进程A")]),_._v("需要从缓冲区读取"),t("code",[_._v("进程B")]),_._v("产生的信息，当缓冲区为空时，"),t("code",[_._v("进程B")]),_._v("因为读取不到信息而被阻塞。而当"),t("code",[_._v("进程A")]),_._v("产生信息放入缓冲区时，"),t("code",[_._v("进程B")]),_._v("才会被唤醒。概念如图 1 所示。 "),t("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/c43bc18cf5524f659a9ecfd8f8ccd5ca~tplv-k3u1fbpfcp-zoom-in-crop-mark:1304:0:0:0.awebp",alt:"img"}})]),_._v(" "),t("blockquote",[t("p",[_._v("互斥。是指多个进程不允许同时使用同一资源。当某个进程使用某种资源的时候，其他进程必须等待。")])]),_._v(" "),t("p",[_._v("比如"),t("code",[_._v("进程B")]),_._v("需要访问打印机，但此时"),t("code",[_._v("进程A")]),_._v("占有了打印机，"),t("code",[_._v("进程B")]),_._v("会被阻塞，直到"),t("code",[_._v("进程A")]),_._v("释放了打印机资源,进程 B 才可以继续执行。概念如图 3 所示。 "),t("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/9f49d7a510234059a036db17621e6611~tplv-k3u1fbpfcp-zoom-in-crop-mark:1304:0:0:0.awebp",alt:"img"}})]),_._v(" "),t("h4",{attrs:{id:"_3-1-信号量-了解概念即可"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-信号量-了解概念即可"}},[_._v("#")]),_._v(" 3.1 信号量（了解概念即可）")]),_._v(" "),t("p",[t("code",[_._v("信号量")]),_._v("主要是来解决进程的"),t("code",[_._v("同步")]),_._v("和"),t("code",[_._v("互斥")]),_._v("的，我们前端需要了解，如果涉及到同步和互斥的关系（我们编程大多数关于流程的逻辑问题，本质不就是同步和互斥吗？）")]),_._v(" "),t("p",[_._v("在操作系统中，常用"),t("code",[_._v("P、V信号量")]),_._v("来实现进程间的"),t("code",[_._v("同步")]),_._v("和"),t("code",[_._v("互斥")]),_._v("，我们简单了解一下一种常用的信号量，"),t("code",[_._v("记录型信号量")]),_._v("来简单了解一下信号量本质是怎样的。（c 语言来表示，会有备注）")]),_._v(" "),t("div",{staticClass:"language-C extra-class"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[_._v("/*记录型信号量的定义*/")]),_._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[_._v("typedef")]),_._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[_._v("struct")]),_._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v("{")]),_._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[_._v("int")]),_._v(" value"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(";")]),_._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[_._v("// 剩余资源")]),_._v("\n    Struct process "),t("span",{pre:!0,attrs:{class:"token operator"}},[_._v("*")]),_._v("L "),t("span",{pre:!0,attrs:{class:"token comment"}},[_._v("// 等待队列")]),_._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v("}")]),_._v(" semaphore\n复制代码\n")])])]),t("p",[_._v("意思是信号量的结构有两部分组成，"),t("code",[_._v("一部分是剩余资源value")]),_._v("，比如目前有两台打印机空闲，那么剩余资源就是 2，谁正在使用打印机，剩余资源就减 1。")]),_._v(" "),t("p",[t("code",[_._v("Struct process *L")]),_._v("意思是，比如 2 台打印机都有人在用，这时候你的要用打印机，此时会把这个打印机资源的请求放入阻塞队列，L 就是阻塞队列的地址。")]),_._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[_._v("/*P 操作，也就是记录型信号量的请求资源操作*/\nvoid wait (semaphore S) {\n    S.value--;\n    if (S.value < 0){\n        block (S.L);\n    }\n}\n复制代码\n")])])]),t("p",[_._v("需要注意的是，如果剩余资源数不够，使用 block 原语使进程从运行态进入阻塞态，并把挂到信号量 S 的等待队列中。")]),_._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[_._v("/*V 操作，也就是记录型信号量的释放资源操作*/\nvoid singal (semaphore S) {\n    S.value++;\n    if (S.value <= 0){\n        wakeup (S.L);\n    }\n}\n复制代码\n")])])]),t("p",[_._v("释放资源后，若还有别的进程在等待这个资源，比如打印机资源，则使用 wakeup 原语唤醒等待队列中的一个进程，该进程从阻塞态变为继续态。")]),_._v(" "),t("h4",{attrs:{id:"_3-2-生产者消费者问题-了解概念即可"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-生产者消费者问题-了解概念即可"}},[_._v("#")]),_._v(" 3.2 生产者消费者问题（了解概念即可）")]),_._v(" "),t("p",[_._v("为什么要讲这个呢，主要是 node 的流的机制，本质就是生产者消费者问题，可以简单的看看这个问题如何解决。")]),_._v(" "),t("p",[t("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/e1e2c682268d41ca8c83534fa084a99c~tplv-k3u1fbpfcp-zoom-in-crop-mark:1304:0:0:0.awebp",alt:"img"}}),_._v(" 如上图，"),t("code",[_._v("生产者")]),_._v("的主要作用是生成"),t("code",[_._v("一定量的数据放到缓冲区中")]),_._v("，然后"),t("code",[_._v("重复此过程")]),_._v("。与此同时，消费者也在"),t("code",[_._v("缓冲区消耗这些数据")]),_._v("。该问题的关键就是要保证生产者不会在缓冲区满时加入数据，消费者也不会在缓冲区中空时消耗数据。")]),_._v(" "),t("p",[_._v("这里我们需要两个同步信号量和一个互斥信号量")]),_._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[_._v("// 互斥信号量，实现对缓冲区的互斥访问\nsemaphore mutex = 1;\n// 同步信号量，表示目前还可以生产几个产品\nsemaphore empty = n;\n// 同步信号量，表示目前可以消耗几个产品\nsemaphore full = 0;\n复制代码\n")])])]),t("p",[_._v("生产者代码如下")]),_._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[_._v("producer () {\n    while(1) {\n        // 生产一个产品\n        P(empty);\n        // 对缓冲区加锁\n        P(mutex);\n        这里的代码是生产一个产品\n        // 解锁\n        V(mutex);\n        // 产出一个产品\n        V(full);\n    }\n}\n\n复制代码\n")])])]),t("p",[_._v("消费者代码如下")]),_._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[_._v("producer () {\n    while(1) {\n        // 消费一个产品\n        P(full);\n        // 对缓冲区加锁\n        P(mutex);\n        这里的代码是消费一个产品\n        // 解锁\n        V(mutex);\n        // 消费一个产品\n        V(empty);\n    }\n}\n\n复制代码\n")])])]),t("h2",{attrs:{id:"_4、-内存的基础知识和概念"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4、-内存的基础知识和概念"}},[_._v("#")]),_._v(" 4、 内存的基础知识和概念")]),_._v(" "),t("blockquote",[t("p",[_._v("为什么需要内存")])]),_._v(" "),t("p",[_._v("内存是计算机"),t("code",[_._v("其它硬件设备")]),_._v("与"),t("code",[_._v("CPU沟通")]),_._v("的桥梁、中转站。程序执行前需要先放到内存中才能被 CPU 处理。")]),_._v(" "),t("h4",{attrs:{id:"_4-1-cpu-如何区分执行程序的数据在内存的什么地方"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-cpu-如何区分执行程序的数据在内存的什么地方"}},[_._v("#")]),_._v(" 4.1 cpu 如何区分执行程序的数据在内存的什么地方")]),_._v(" "),t("ul",[t("li",[_._v("是通过给"),t("code",[_._v("内存的存储单元编址")]),_._v("实现的。（存储单元一般是以字节为单位）")]),_._v(" "),t("li",[_._v("如下图，内存的存储单元，就像一个酒店的房间，都有编号，比如程序一的数据都在 1 楼，1 楼 1 号存储着程序里"),t("code",[_._v("let a = 1")]),_._v("这段代码。")])]),_._v(" "),t("p",[t("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/3a38ed59e7b0490d8cf33f1918aad2b3~tplv-k3u1fbpfcp-zoom-in-crop-mark:1304:0:0:0.awebp",alt:"img"}})]),_._v(" "),t("h4",{attrs:{id:"_4-2-内存管理-内存空间的分配与回收"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-内存管理-内存空间的分配与回收"}},[_._v("#")]),_._v(" 4.2 内存管理-内存空间的分配与回收")]),_._v(" "),t("ul",[t("li",[_._v("内存分配分为"),t("code",[_._v("连续分配")]),_._v("和"),t("code",[_._v("非连续分配")]),_._v("，连续分配是指用户进程分配的必须是"),t("code",[_._v("一个连续的内存空间")]),_._v("。")]),_._v(" "),t("li",[_._v("这里我们只讲连续分配中的"),t("code",[_._v("动态分区分配")]),_._v("。")]),_._v(" "),t("li",[_._v("什么是动态分区分配呢，这种分配方式"),t("code",[_._v("不会预先划分内存分区")]),_._v("，而是在进程装入内存时，根据进程的大小"),t("code",[_._v("动态地")]),_._v("建立分区，并使分区的大小"),t("code",[_._v("正好适合")]),_._v("进程的需要。（比如，某计算机内存大小 64MB，系统区 8MB，用户区 56MB...，现在我们有几个进程要装入内存，如下图）")])]),_._v(" "),t("p",[t("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/ffd33160b37145b1b88cac9291623cac~tplv-k3u1fbpfcp-zoom-in-crop-mark:1304:0:0:0.awebp",alt:"img"}})]),_._v(" "),t("ul",[t("li",[_._v("随之而来的问题就是，如果此时进程 1 使用完了，相应在内存上的数据也被删除了，那么"),t("code",[_._v("空闲的区域")]),_._v("，后面该怎么分配（也就是说随着进程退出，会有很多空闲的内存区域出现）")])]),_._v(" "),t("p",[_._v("我们讲一种较为简单的处理方法叫"),t("code",[_._v("空闲分区表")]),_._v("法来解决这个问题。如下图，右侧的表格就是一个空闲分区表。")]),_._v(" "),t("p",[t("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/a68dfb01459c42c6903079072272157d~tplv-k3u1fbpfcp-zoom-in-crop-mark:1304:0:0:0.awebp",alt:"img"}})]),_._v(" "),t("p",[_._v("当很多个空闲分区都能满足需求时，应该选择哪个分区进行分配呢，例如下图，分别有"),t("code",[_._v("20MB")]),_._v("，"),t("code",[_._v("10MB")]),_._v("，"),t("code",[_._v("4MB")]),_._v("三个空闲分区块，现在"),t("code",[_._v("进程5")]),_._v("需要"),t("code",[_._v("4MB")]),_._v("空闲分区，改怎么分配呢？")]),_._v(" "),t("p",[_._v("我们需要按照一定的动态分区分配算法，比如有"),t("code",[_._v("首次适应算法")]),_._v("，指的是每次都从低地址开始查找，找到第一个能满足大小的空闲分区。还有比如"),t("code",[_._v("最佳适应算法")]),_._v("，指的是从空闲分区表中找到最小的适合分配的分区块来满足需求。")]),_._v(" "),t("p",[t("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/b26aa3c975264ceea6d3ed652d1c6614~tplv-k3u1fbpfcp-zoom-in-crop-mark:1304:0:0:0.awebp",alt:"img"}})]),_._v(" "),t("p",[t("code",[_._v("连续分配缺点很明显")]),_._v("，大多数情况，需要分配的进程大小，不能跟空闲分区剩下的大小完全一样，这样就产生很多很难利用的"),t("code",[_._v("内存碎片")]),_._v("。")]),_._v(" "),t("p",[_._v("这里我们介绍一种更好的空闲分区的分配方法，"),t("code",[_._v("基本分页存储")]),_._v("。如下图")]),_._v(" "),t("p",[t("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/dd268e0a431a4b15ae4296bfca89694a~tplv-k3u1fbpfcp-zoom-in-crop-mark:1304:0:0:0.awebp",alt:"img"}}),_._v(" 将内存空间分为"),t("code",[_._v("一个个大小相等")]),_._v("的分区（比如：每个分区"),t("code",[_._v("4KB")]),_._v("）.每个分区就是一个"),t("code",[_._v("“页框”")]),_._v("。页框号从"),t("code",[_._v("0")]),_._v("开始。")]),_._v(" "),t("p",[_._v("将用户进程的地址空间分为与页框大小相等的一个个区域，称为"),t("code",[_._v("“页”")]),_._v("。每个页也是从"),t("code",[_._v("0")]),_._v("开始。")]),_._v(" "),t("h2",{attrs:{id:"_5、-文件管理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5、-文件管理"}},[_._v("#")]),_._v(" 5、 文件管理")]),_._v(" "),t("blockquote",[t("p",[_._v("文件是什么？")])]),_._v(" "),t("p",[_._v("文件就是一组有意义的"),t("code",[_._v("信息/数据")]),_._v("集合。")]),_._v(" "),t("p",[_._v("计算机中存放了各种各样的文件，一个文件有哪些属性呢？文件内部的数据应该怎样组织起来？文件之间又该怎么组织起来？")]),_._v(" "),t("h4",{attrs:{id:"_5-1-文件的属性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-文件的属性"}},[_._v("#")]),_._v(" 5.1 文件的属性")]),_._v(" "),t("p",[t("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/e6421765e1ce4a9cb65e43d141024eb7~tplv-k3u1fbpfcp-zoom-in-crop-mark:1304:0:0:0.awebp",alt:"img"}})]),_._v(" "),t("ul",[t("li",[_._v("文件名。即文件的名字，需要注意的是，同一目录下"),t("code",[_._v("不允许")]),_._v("有重名的文件。")]),_._v(" "),t("li",[_._v("标识符。操作系统用于区分各个文件的一种"),t("code",[_._v("内部的名称")]),_._v("。")]),_._v(" "),t("li",[_._v("类型。文件的类型。")]),_._v(" "),t("li",[_._v("位置。文件"),t("code",[_._v("存放的路径")]),_._v("，同时也是在硬盘里的位置（需要转换成物理硬盘上的地址）")]),_._v(" "),t("li",[_._v("创建时间、上次修改时间、文件所有者就是字面意思。")]),_._v(" "),t("li",[_._v("保护信息。比如对这个文件的"),t("code",[_._v("执行权限")]),_._v("，是否有删除文件权限，修改文件权限等等。")])]),_._v(" "),t("h4",{attrs:{id:"_5-2-文件内部数据如何组织在一起"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-文件内部数据如何组织在一起"}},[_._v("#")]),_._v(" 5.2 文件内部数据如何组织在一起")]),_._v(" "),t("p",[_._v("如下图，文件主要分为"),t("code",[_._v("有结构文件")]),_._v("和"),t("code",[_._v("无结构文件")]),_._v("。")]),_._v(" "),t("p",[t("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/3f1af8437fa94756b1b43fd6bf33b192~tplv-k3u1fbpfcp-zoom-in-crop-mark:1304:0:0:0.awebp",alt:"img"}})]),_._v(" "),t("h4",{attrs:{id:"_5-3-文件之间如何组织起来"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-文件之间如何组织起来"}},[_._v("#")]),_._v(" 5.3 文件之间如何组织起来")]),_._v(" "),t("p",[_._v("通过"),t("code",[_._v("树状结构")]),_._v("组织的。例如"),t("code",[_._v("windows")]),_._v("的文件间的组织关系如下：")]),_._v(" "),t("p",[t("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/432b2dcbf38c4a8980f4870e1d6b4c9c~tplv-k3u1fbpfcp-zoom-in-crop-mark:1304:0:0:0.awebp",alt:"img"}})]),_._v(" "),t("p",[_._v("接下来我们详细的了解一下"),t("code",[_._v("文件的逻辑结构")])]),_._v(" "),t("h4",{attrs:{id:"_5-4-文件的逻辑结构"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-4-文件的逻辑结构"}},[_._v("#")]),_._v(" 5.4 文件的逻辑结构")]),_._v(" "),t("p",[_._v("逻辑结构是指，在用户看来，文件内部的数据是如何组织起来的，而"),t("code",[_._v("“物理结构”")]),_._v("是在操作系统看来，文件是如何保存在外存，比如"),t("code",[_._v("硬盘")]),_._v("中的。")]),_._v(" "),t("p",[t("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/70dc16b172314e5db51fc5d04d8a064e~tplv-k3u1fbpfcp-zoom-in-crop-mark:1304:0:0:0.awebp",alt:"img"}})]),_._v(" "),t("p",[_._v("比如，"),t("code",[_._v("“线性表”")]),_._v("就是一种逻辑结构，在用户看来，线性表就是一组有先后关系的元素序列，如："),t("code",[_._v("a,b,c,d,e....")])]),_._v(" "),t("ul",[t("li",[t("code",[_._v("“线性表”")]),_._v("这种逻辑结构可以用不同的物理结构实现，比如："),t("code",[_._v("顺序表/链表")]),_._v("。"),t("code",[_._v("顺序表")]),_._v("的各个元素在逻辑上相邻，在物理上也相邻：而"),t("code",[_._v("链表")]),_._v("的各个元素在物理上可以是不相邻的。")]),_._v(" "),t("li",[_._v("因此，顺序表可以实现"),t("code",[_._v("“随机访问”")]),_._v("，而"),t("code",[_._v("“链表”")]),_._v("无法实现随机访问。")])]),_._v(" "),t("p",[_._v("接下来我了解一下有结构文件的三种逻辑结构")]),_._v(" "),t("h5",{attrs:{id:"_5-4-1-顺序文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-4-1-顺序文件"}},[_._v("#")]),_._v(" 5.4.1 顺序文件")]),_._v(" "),t("blockquote",[t("p",[_._v("什么是顺序文件")])]),_._v(" "),t("p",[_._v("指的是文件中的记录一个接一个地在逻辑上是"),t("code",[_._v("顺序排列")]),_._v("，记录可以是"),t("code",[_._v("定长")]),_._v("或"),t("code",[_._v("变长")]),_._v("，各个记录在物理上可以"),t("code",[_._v("顺序存储")]),_._v("或"),t("code",[_._v("链式存储")])]),_._v(" "),t("p",[t("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/a5a6f71703a849c3a2a3b3d10f521481~tplv-k3u1fbpfcp-zoom-in-crop-mark:1304:0:0:0.awebp",alt:"img"}})]),_._v(" "),t("ul",[t("li",[_._v("顺序文件按结构来划分，可以分为"),t("code",[_._v("串结构")]),_._v("和"),t("code",[_._v("顺序结构")]),_._v("。")]),_._v(" "),t("li",[_._v("串结构是指记录之间的顺序与"),t("code",[_._v("关键字无关")]),_._v("，通常都是按照记录的时间决定记录的顺序。")]),_._v(" "),t("li",[_._v("顺序结构就必须保证记录之间的先后顺序按"),t("code",[_._v("关键字排列")]),_._v("。")])]),_._v(" "),t("p",[_._v("这里需要注意的知识点是，顺序文件的存储方式和是否"),t("code",[_._v("按关键字排列")]),_._v("，会影响数据"),t("code",[_._v("是否支持随机存取")]),_._v("和"),t("code",[_._v("是否可以快速按关键字找到对应记录")]),_._v("的功能。")]),_._v(" "),t("p",[_._v("可以看到，顺序文件按顺序存放对于查找是非常有帮助的，我们在记录文件的时候也可以注意利用这一点。")]),_._v(" "),t("p",[t("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/0d09c18951374a87b2add0bd911adb45~tplv-k3u1fbpfcp-zoom-in-crop-mark:1304:0:0:0.awebp",alt:"img"}})]),_._v(" "),t("h5",{attrs:{id:"_5-4-2-索引文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-4-2-索引文件"}},[_._v("#")]),_._v(" 5.4.2 索引文件")]),_._v(" "),t("p",[_._v("对于"),t("code",[_._v("可变长记录文件")]),_._v("，要找到"),t("code",[_._v("第i")]),_._v("个记录，必须先顺序查找"),t("code",[_._v("前i-1")]),_._v("个记录（也就是需要遍历一遍），但是很多场景中又必须使用可变长记录，如何解决这个问题呢？这就引出来马上讲的"),t("code",[_._v("索引文件")])]),_._v(" "),t("p",[t("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/63a6c065b6404ad7a095d76fa7427be5~tplv-k3u1fbpfcp-zoom-in-crop-mark:1304:0:0:0.awebp",alt:"img"}})]),_._v(" "),t("ul",[t("li",[_._v("给这些变长的记录都用一张索引表来记录，一个索引表项包括了"),t("code",[_._v("索引号")]),_._v("，"),t("code",[_._v("长度")]),_._v("和"),t("code",[_._v("指针")]),_._v("。")]),_._v(" "),t("li",[_._v("其中，可以将关键字作为索引号的内容，如果关键字本身的排列是有序的，那么还可以按照关键字进行折半查找。这里是关键，因为我们平时用 mysql 数据库对某个字段假如索引，就是这个道理。")]),_._v(" "),t("li",[_._v("但是建立索引表的问题也很明显，首先若要"),t("code",[_._v("删除/增加")]),_._v("一个记录，同时也要对"),t("code",[_._v("索引表")]),_._v("操作，其次，如果"),t("code",[_._v("增加一条记录才1KB")]),_._v("，但是索引表"),t("code",[_._v("增加i一条记录可能有8KB")]),_._v("，以至于索引表的体积大大多于记录。存储空间的利用率就比较低。")])]),_._v(" "),t("h5",{attrs:{id:"_5-4-3-索引顺序文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-4-3-索引顺序文件"}},[_._v("#")]),_._v(" 5.4.3 索引顺序文件")]),_._v(" "),t("p",[_._v("索引顺序文件是"),t("code",[_._v("索引文件")]),_._v("和"),t("code",[_._v("顺序文件")]),_._v("思想的结合。索引顺序文件中，同样会为文件建立一张索引表，但不同的是，并不是每个记录对应一个"),t("code",[_._v("索引表项")]),_._v("，而是一组记录对应一个索引表项。")]),_._v(" "),t("p",[t("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/0a70b298461f4e84970428384a9d3e45~tplv-k3u1fbpfcp-zoom-in-crop-mark:1304:0:0:0.awebp",alt:"img"}})]),_._v(" "),t("p",[_._v("如上图，学生记录按照学生姓名的开头字母进行分组。每个分组就是一个顺序文件，分组内的记录不需要按关键字排序")]),_._v(" "),t("h4",{attrs:{id:"_5-5-文件目录"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-5-文件目录"}},[_._v("#")]),_._v(" 5.5 文件目录")]),_._v(" "),t("p",[_._v("首先，我们需要了解一下"),t("code",[_._v("文件控制")]),_._v("块是什么。我们假设目前在"),t("code",[_._v("windows的D盘")]),_._v("，如下图")]),_._v(" "),t("p",[t("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/ae80fe1578784a6abf0649f7e404d215~tplv-k3u1fbpfcp-zoom-in-crop-mark:1304:0:0:0.awebp",alt:"img"}})]),_._v(" "),t("p",[_._v("可以看到，目录本身就是一种"),t("code",[_._v("有结构的文件")]),_._v("，记录了目录里的"),t("code",[_._v("文件")]),_._v("和"),t("code",[_._v("目录")]),_._v("的信息，比如名称和类型。而这些一条条的记录就是一个个的"),t("code",[_._v("“文件控制块”（FCB）")]),_._v("。")]),_._v(" "),t("p",[_._v("文件目录的结构通常是"),t("code",[_._v("树状的")]),_._v("，例如 linux 里"),t("code",[_._v("/")]),_._v("是指根路径，"),t("code",[_._v("/home")]),_._v("是根路径下的二级目录")]),_._v(" "),t("p",[t("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/3f8e8b78cf9a43bd8ec0e3913eb69d53~tplv-k3u1fbpfcp-zoom-in-crop-mark:1304:0:0:0.awebp",alt:"img"}})]),_._v(" "),t("ul",[t("li",[_._v("需要注意的是，树状目录"),t("code",[_._v("不容易实现文件共享")]),_._v("，所以在树形目录结构的基础上，增加了一些指向同一节点的有向边（可以简单理解为引用关系，就跟 js 里的对象一样）")]),_._v(" "),t("li",[_._v("也就是说需要为"),t("code",[_._v("每个共享节点")]),_._v("设置一个"),t("code",[_._v("共享计数器")]),_._v("，用于记录此时有多少个地方在共享该结点。只有"),t("code",[_._v("共享计数器减为0")]),_._v("，才删除该节点。")])]),_._v(" "),t("h4",{attrs:{id:"文件分配方式-物理分配"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#文件分配方式-物理分配"}},[_._v("#")]),_._v(" 文件分配方式（物理分配）")]),_._v(" "),t("p",[_._v("我们这里介绍一种索引分配的方式：")]),_._v(" "),t("p",[_._v("索引分配允许文件离散地分配在各个磁盘块中，系统会为每个文件建立一张索引表，索引表记录了文件各个逻辑块对应的物理块。索引表存放的磁盘块称为索引快。文件数据存放的磁盘块称为数据块。")]),_._v(" "),t("p",[t("img",{attrs:{src:"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/bc8174ebcc114535bba6c176aa994c2e~tplv-k3u1fbpfcp-zoom-in-crop-mark:1304:0:0:0.awebp",alt:"截屏2021-07-30 上午8.48.45.png"}})]),_._v(" "),t("p",[_._v("如上图，假设某个新创建的文件'aaa'的数据依次存放磁盘块 2->5->13>9。7 号磁盘块作为’aaa‘的索引块，索引块保存了索引表的内容")]),_._v(" "),t("h4",{attrs:{id:"文件的逻辑分配和物理分配"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#文件的逻辑分配和物理分配"}},[_._v("#")]),_._v(" 文件的逻辑分配和物理分配")]),_._v(" "),t("p",[_._v("上面我们讲到了文件的逻辑分配，是站在用户视角的分配，物理分配是站在操作系统的角度的分配，分配的是实际的物理磁盘里的空间。")]),_._v(" "),t("p",[_._v("举个例子，我们用户看到的文件，意识里都是顺序排列的，比如说，excel 表有 100 行数据，用户看来这 100 行数据就是连续的。")]),_._v(" "),t("p",[_._v("在操作系统的视角，它可以把这 100 行数据分为一个个的数据块，比如跟磁盘块（假设磁盘块是 1kb 大小）一样都是 1kb，拆分后的数据可以使用索引表的形式分配（也就是我们上面才讲了的，索引分配的方式，打散分配在实际的物理磁盘里）")]),_._v(" "),t("h4",{attrs:{id:"_5-6-文件存储空间管理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-6-文件存储空间管理"}},[_._v("#")]),_._v(" 5.6 文件存储空间管理")]),_._v(" "),t("p",[_._v("首先，我们了解一下磁盘分为"),t("code",[_._v("目录区")]),_._v("和"),t("code",[_._v("文件区")]),_._v("。")]),_._v(" "),t("p",[t("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/52b8b0a5f7a3429086355bc4d270f413~tplv-k3u1fbpfcp-zoom-in-crop-mark:1304:0:0:0.awebp",alt:"img"}})]),_._v(" "),t("p",[_._v("接着，我们了解一下常见的两种"),t("code",[_._v("文件存储空间的管理算法")]),_._v("，如下图，假如硬盘上"),t("code",[_._v("空闲的数据块")]),_._v("是蓝色，"),t("code",[_._v("非空闲的数据")]),_._v("块是橙色。")]),_._v(" "),t("p",[t("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/6cd7a2957b11495c9cdb1f36fe8a6da0~tplv-k3u1fbpfcp-zoom-in-crop-mark:1304:0:0:0.awebp",alt:"img"}})]),_._v(" "),t("p",[_._v("对分配连续的存储空间，可以采用"),t("code",[_._v("空闲表法")]),_._v("（只讲这种较简单的方法）来"),t("code",[_._v("分配")]),_._v("和"),t("code",[_._v("回收")]),_._v("磁盘块。对于分配，可以采用首次适应，最佳适应等算法来决定要为文件分配哪个区间。（空闲表表示如下）")]),_._v(" "),t("p",[t("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/efaf172946114c8eb87b30a2ea169879~tplv-k3u1fbpfcp-zoom-in-crop-mark:1304:0:0:0.awebp",alt:"img"}})]),_._v(" "),t("ul",[t("li",[t("code",[_._v("首次适应")]),_._v("是指当要插入数据的时候，空闲表会依次检查空闲表中的表项，然后找到"),t("code",[_._v("第一个满足条件")]),_._v("的空闲区间。")]),_._v(" "),t("li",[t("code",[_._v("最佳适应算法")]),_._v("是指当要插入数据的时候，空闲表会依次检查空闲表中的表项，然后找到"),t("code",[_._v("满足条件而且空闲块最小的空闲区间")]),_._v("。")])]),_._v(" "),t("p",[_._v("再讲一种位示图法")]),_._v(" "),t("p",[_._v("如下图：")]),_._v(" "),t("p",[t("img",{attrs:{src:"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/8bb290ae36894a6f9c1403c4957b7bc3~tplv-k3u1fbpfcp-zoom-in-crop-mark:1304:0:0:0.awebp",alt:"image.png"}})]),_._v(" "),t("p",[_._v("每一个二进制位对应一个磁盘块，比如上面 0 表示空闲块，1 表示已分配的块。而且我们可以通过一定的公式，可以从示图表的横纵坐标推断出物理块的实际地址，也可以从物理块的实际地址推断出在表里的横纵坐标。")]),_._v(" "),t("h4",{attrs:{id:"_5-7-文件共享"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-7-文件共享"}},[_._v("#")]),_._v(" 5.7 文件共享")]),_._v(" "),t("p",[_._v("文件共享分为两种")]),_._v(" "),t("p",[t("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/678a819dc59c46cba3266249aa5ba27e~tplv-k3u1fbpfcp-zoom-in-crop-mark:1304:0:0:0.awebp",alt:"img"}})]),_._v(" "),t("ul",[t("li",[_._v("注意，多个用户"),t("code",[_._v("共享同一个文件")]),_._v("，意味着系统只有"),t("code",[_._v("“一份”")]),_._v("文件数据。并且只要某个用户修改了该文件的数据，其他用户也可以看到"),t("code",[_._v("文件的变化")]),_._v("。")]),_._v(" "),t("li",[_._v("软连接可以理解为"),t("code",[_._v("windows")]),_._v("里的"),t("code",[_._v("快捷方式")]),_._v("。")]),_._v(" "),t("li",[_._v("硬链接可以理解为 js 里的"),t("code",[_._v("引用计数")]),_._v("，只有引用为"),t("code",[_._v("0")]),_._v("的时候，才会真正删除这个文件。")])]),_._v(" "),t("h4",{attrs:{id:"_5-8-文件保护"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-8-文件保护"}},[_._v("#")]),_._v(" 5.8 文件保护")]),_._v(" "),t("p",[_._v("操作系统需要保护文件的安全，一般有如下 3 种方式：")]),_._v(" "),t("ul",[t("li",[_._v("口令保护。是指为文件设置一个"),t("code",[_._v("“口令”")]),_._v("（比如 123），用户请求访问该文件时必须提供对应的口令。口令一般放在文件对应的"),t("code",[_._v("FCB或者索引结点")]),_._v("上。")]),_._v(" "),t("li",[_._v("加密保护。使用某个"),t("code",[_._v('"密码"')]),_._v("对文件进行加密，在访问文件时需要提供"),t("code",[_._v("正确的“密码”")]),_._v("才能对文件进行正确的解密。")]),_._v(" "),t("li",[_._v("访问控制。在每个文件的 FCB 或者索引节点种增加一个"),t("code",[_._v("访问控制列表")]),_._v("，该表中记录了各个用户可以对该文件执行哪些操作。")])]),_._v(" "),t("p",[t("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/d8b30ba5541246ad90018aedce215a26~tplv-k3u1fbpfcp-zoom-in-crop-mark:1304:0:0:0.awebp",alt:"img"}})]),_._v(" "),t("h3",{attrs:{id:"总结文件系统这块的内容"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#总结文件系统这块的内容"}},[_._v("#")]),_._v(" 总结文件系统这块的内容")]),_._v(" "),t("p",[_._v("我们举一个实际案例，把上面的内容总结一下。")]),_._v(" "),t("p",[_._v("假如我们当前的操作系统采用如下的文件系统管理方式：")]),_._v(" "),t("ul",[t("li",[_._v("文件的物理结构 --- 索引分配（混合索引）")]),_._v(" "),t("li",[_._v("文件目录的实现 --- inode 结点")]),_._v(" "),t("li",[_._v("空闲分区管理 --- 位示图法")])]),_._v(" "),t("p",[_._v("那么我们假设 0 号磁盘块就是装载位示图的磁盘块，用来管理哪些磁盘是空闲的哪些是正在使用的。 "),t("img",{attrs:{src:"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/5129b71fdcb34e3ab49b2de7469215ba~tplv-k3u1fbpfcp-zoom-in-crop-mark:1304:0:0:0.awebp",alt:"img"}})]),_._v(" "),t("p",[_._v("因为这里我们已经使用了 0 号块，位示图的第一项就是 1")]),_._v(" "),t("p",[_._v("接着我们把磁盘块第二块用来放 inode 节点，也就是文件目录索引节点，意思是文件目录下存放的只有文件名和索引节点的位置，要知道文件的详细信息，就要靠着")]),_._v(" "),t("p",[t("img",{attrs:{src:"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/68935b04dd884171a13dd36c3584b73a~tplv-k3u1fbpfcp-zoom-in-crop-mark:1304:0:0:0.awebp",alt:"img"}})]),_._v(" "),t("p",[_._v("假设 2 号磁盘块存放了我们根目录信息，而本身目录其实也是一种特殊的文件，也在 inode 节点表里有自己的信息，1 号磁盘块增加类似如下信息：")]),_._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[_._v("类型：目录\n存放在：2号磁盘块\n复制代码\n")])])]),t("p",[_._v("2 号磁盘块里面存放了一个"),t("code",[_._v("你好.txt")]),_._v("文件，那么 2 号磁盘块会增加一行信息，类似")]),_._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[_._v("文件名：你好.txt\ninode结点：2\n复制代码\n")])])]),t("p",[_._v("这就意味着，2 号 inode 节点存放了你好.txt 文件的具体磁盘块在哪，所以在 1 号磁盘块的 2 号 inode 节点增加")]),_._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[_._v("类型：txt\n存放在：3、4号磁盘块\n复制代码\n")])])]),t("p",[_._v("为什么要放到 3、4 号磁盘块呢，因为我们有位示图，知道哪些磁盘块是空闲的就分配给它，一扫描发现 3、4 正空闲而且满足存放这个文件的条件，就分配出去了。")]),_._v(" "),t("p",[_._v("我们在细分一下这里的 3、4 号磁盘块是什么意思，因为我们物理磁盘块分配的方法是混合索引，其实 3、4 号磁盘块表示的形式如下：")]),_._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[_._v("直接索引：3号磁盘块\n直接索引：4号磁盘块\n复制代码\n")])])]),t("p",[_._v("上面只涉及到直接索引，我们其实还可以有 1 级索引，2 级索引，这些索引指向的是一个索引表，我们这里就不详细叙述了（之前交过索引块和索引表）。")]),_._v(" "),t("p",[_._v("到这里我们们就基本明白了一个文件系统的基本运行原理。")]),_._v(" "),t("h2",{attrs:{id:"_6、-i-o-设备"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6、-i-o-设备"}},[_._v("#")]),_._v(" 6、 I/O 设备")]),_._v(" "),t("blockquote",[t("p",[_._v("什么是 I/O 设备")])]),_._v(" "),t("p",[_._v("I/O 就是"),t("code",[_._v("输入输出")]),_._v("(Input/Output)的意思，I/O 设备就是可以将数据输入到计算机，或者可以接收计算机输出数据的外部设备，属于计算机中的硬件部件。 "),t("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/536eb5ac39434f8b8af6854229cca78a~tplv-k3u1fbpfcp-zoom-in-crop-mark:1304:0:0:0.awebp",alt:"img"}})]),_._v(" "),t("h4",{attrs:{id:"_6-1-i-o-设备分类-按使用特性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-1-i-o-设备分类-按使用特性"}},[_._v("#")]),_._v(" 6.1 I/O 设备分类--按使用特性")]),_._v(" "),t("ul",[t("li",[_._v("人机交互类设备，这类设备传输数据的速度慢")])]),_._v(" "),t("p",[t("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/dcdfaebb040f4233be5f864b00905eae~tplv-k3u1fbpfcp-zoom-in-crop-mark:1304:0:0:0.awebp",alt:"img"}})]),_._v(" "),t("ul",[t("li",[_._v("存储设备，这类设备传输数据的速度较快")])]),_._v(" "),t("p",[t("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/89c845739cd242ea867cdc3a519fa784~tplv-k3u1fbpfcp-zoom-in-crop-mark:1304:0:0:0.awebp",alt:"img"}})]),_._v(" "),t("ul",[t("li",[_._v("网络通信设备，这类设备的传输速度介于人机交互设备和存储设备之间")])]),_._v(" "),t("h4",{attrs:{id:"_6-2-i-o-控制器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-i-o-控制器"}},[_._v("#")]),_._v(" 6.2 I/O 控制器")]),_._v(" "),t("p",[_._v("CPU 无法直接控制"),t("code",[_._v("I/O设备的机械部件")]),_._v("，因此 I/O 设备还要有一个电子部件作为"),t("code",[_._v("CPU")]),_._v("和"),t("code",[_._v("I/O设备")]),_._v("机械部件之间的"),t("code",[_._v("“中介”")]),_._v("，用于实现 CPU 对设备的控制。这个电子部件就是"),t("code",[_._v("I/O控制器")]),_._v("。")]),_._v(" "),t("p",[t("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/3c4431903aa8475688e9b181938a4e85~tplv-k3u1fbpfcp-zoom-in-crop-mark:1304:0:0:0.awebp",alt:"img"}})]),_._v(" "),t("ul",[t("li",[_._v("接收和识别 CPU 发出的指令是指，比如 CPU 发来读取文件的命令，I/O 控制器中会有相应的"),t("code",[_._v("控制寄存器")]),_._v("来存放命令和参数")]),_._v(" "),t("li",[_._v("向 cpu 报告设备的状态是指，I/O 控制器会有相应的"),t("code",[_._v("状态寄存器")]),_._v("，用来记录 I/O 设备"),t("code",[_._v("是否空闲")]),_._v("或者"),t("code",[_._v("忙碌")])]),_._v(" "),t("li",[_._v("数据交换是指 I/O 控制器会设置相应的"),t("code",[_._v("数据寄存器")]),_._v("。输出时，数据寄存器用于"),t("code",[_._v("暂存CPU发来的数据")]),_._v("，之后再由控制器传送给设备。")]),_._v(" "),t("li",[_._v("地址识别是指，为了区分设备控制器中的各个寄存器中的各个寄存器，也需要给各个寄存器设置一个特性的"),t("code",[_._v("“地址”")]),_._v("。I/O 控制器通过 CPU 提供的“地址”来判断 CPU 要读写的是哪个寄存器")])]),_._v(" "),t("h4",{attrs:{id:"_6-3-i-o-控制方式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-3-i-o-控制方式"}},[_._v("#")]),_._v(" 6.3 I/O 控制方式")]),_._v(" "),t("ul",[t("li",[_._v("这里我们指讲一下目前比较先进的方式，通道控制方式。")]),_._v(" "),t("li",[_._v("通道可以理解为一种"),t("code",[_._v("“弱鸡版CPU”")]),_._v("。通道可以识别并执行一系列通道指令。")])]),_._v(" "),t("p",[t("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/1321294866e34aa99674e26e8780d7e2~tplv-k3u1fbpfcp-zoom-in-crop-mark:1304:0:0:0.awebp",alt:"img"}})]),_._v(" "),t("p",[_._v("通道最大的优点是极大的"),t("code",[_._v("减少了CPU的干预频率")]),_._v("，"),t("code",[_._v("I/O设备")]),_._v("完成任务，通道会向 CPU 发出"),t("code",[_._v("中断")]),_._v("，不需要轮询来问 I/O 设备是否完成 CPU 下达的任务。")])])}),[],!1,null,null,null);v.default=a.exports}}]);