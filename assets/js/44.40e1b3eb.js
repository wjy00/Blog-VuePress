(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{538:function(_,t,v){"use strict";v.r(t);var s=v(54),e=Object(s.a)({},(function(){var _=this,t=_.$createElement,v=_._self._c||t;return v("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[v("h1",{attrs:{id:"一、css-基础"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#一、css-基础"}},[_._v("#")]),_._v(" 一、CSS 基础")]),_._v(" "),v("h2",{attrs:{id:"_1-css-选择器及其优先级"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-css-选择器及其优先级"}},[_._v("#")]),_._v(" 1. CSS 选择器及其优先级")]),_._v(" "),v("table",[v("thead",[v("tr",[v("th",[v("strong",[_._v("选择器")])]),_._v(" "),v("th",[v("strong",[_._v("格式")])]),_._v(" "),v("th",[v("strong",[_._v("优先级权重")])])])]),_._v(" "),v("tbody",[v("tr",[v("td",[_._v("id 选择器")]),_._v(" "),v("td",[_._v("#id")]),_._v(" "),v("td",[_._v("100")])]),_._v(" "),v("tr",[v("td",[_._v("类选择器")]),_._v(" "),v("td",[_._v(".classname")]),_._v(" "),v("td",[_._v("10")])]),_._v(" "),v("tr",[v("td",[_._v("属性选择器")]),_._v(" "),v("td",[_._v("a[ref=“eee”]")]),_._v(" "),v("td",[_._v("10")])]),_._v(" "),v("tr",[v("td",[_._v("伪类选择器")]),_._v(" "),v("td",[_._v("li:last-child")]),_._v(" "),v("td",[_._v("10")])]),_._v(" "),v("tr",[v("td",[_._v("标签选择器")]),_._v(" "),v("td",[_._v("div")]),_._v(" "),v("td",[_._v("1")])]),_._v(" "),v("tr",[v("td",[_._v("伪元素选择器")]),_._v(" "),v("td",[_._v("li::after")]),_._v(" "),v("td",[_._v("1")])]),_._v(" "),v("tr",[v("td",[_._v("相邻兄弟选择器")]),_._v(" "),v("td",[_._v("h1+p")]),_._v(" "),v("td",[_._v("0")])]),_._v(" "),v("tr",[v("td",[_._v("子选择器")]),_._v(" "),v("td",[_._v("ul>li")]),_._v(" "),v("td",[_._v("0")])]),_._v(" "),v("tr",[v("td",[_._v("后代选择器")]),_._v(" "),v("td",[_._v("li a")]),_._v(" "),v("td",[_._v("0")])]),_._v(" "),v("tr",[v("td",[_._v("通配符选择器")]),_._v(" "),v("td",[_._v("*")]),_._v(" "),v("td",[_._v("0")])])])]),_._v(" "),v("p",[_._v("对于选择器的"),v("strong",[_._v("优先级")]),_._v("：")]),_._v(" "),v("ul",[v("li",[_._v("标签选择器、伪元素选择器：1")]),_._v(" "),v("li",[_._v("类选择器、伪类选择器、属性选择器：10")]),_._v(" "),v("li",[_._v("id 选择器：100")]),_._v(" "),v("li",[_._v("内联样式：1000")])]),_._v(" "),v("p",[v("strong",[_._v("注意事项：")])]),_._v(" "),v("ul",[v("li",[_._v("!important 声明的样式的优先级最高；")]),_._v(" "),v("li",[_._v("如果优先级相同，则最后出现的样式生效；")]),_._v(" "),v("li",[_._v("继承得到的样式的优先级最低；")]),_._v(" "),v("li",[_._v("通用选择器（*）、子选择器（>）和相邻同胞选择器（+）并不在这四个等级中，所以它们的权值都为 0 ；")]),_._v(" "),v("li",[_._v("样式表的来源不同时，优先级顺序为：内联样式 > 内部样式 > 外部样式 > 浏览器用户自定义样式 > 浏览器默认样式。")])]),_._v(" "),v("h2",{attrs:{id:"_2-css-中可继承与不可继承属性有哪些-了解即可"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-css-中可继承与不可继承属性有哪些-了解即可"}},[_._v("#")]),_._v(" 2. CSS 中可继承与不可继承属性有哪些---了解即可")]),_._v(" "),v("p",[v("strong",[_._v("一、无继承性的属性")])]),_._v(" "),v("ol",[v("li",[v("strong",[_._v("display")]),_._v("：规定元素应该生成的框的类型")]),_._v(" "),v("li",[v("strong",[_._v("文本属性")]),_._v("：")])]),_._v(" "),v("ul",[v("li",[_._v("vertical-align：垂直文本对齐")]),_._v(" "),v("li",[_._v("text-decoration：规定添加到文本的装饰")]),_._v(" "),v("li",[_._v("text-shadow：文本阴影效果")]),_._v(" "),v("li",[_._v("white-space：空白符的处理")]),_._v(" "),v("li",[_._v("unicode-bidi：设置文本的方向")])]),_._v(" "),v("ol",[v("li",[v("strong",[_._v("盒子模型的属性")]),_._v("：width、height、margin、border、padding")]),_._v(" "),v("li",[v("strong",[_._v("背景属性")]),_._v("：background、background-color、background-image、background-repeat、background-position、background-attachment")]),_._v(" "),v("li",[v("strong",[_._v("定位属性")]),_._v("：float、clear、position、top、right、bottom、left、min-width、min-height、max-width、max-height、overflow、clip、z-index")]),_._v(" "),v("li",[v("strong",[_._v("生成内容属性")]),_._v("：content、counter-reset、counter-increment")]),_._v(" "),v("li",[v("strong",[_._v("轮廓样式属性")]),_._v("：outline-style、outline-width、outline-color、outline")]),_._v(" "),v("li",[v("strong",[_._v("页面样式属性")]),_._v("：size、page-break-before、page-break-after")]),_._v(" "),v("li",[v("strong",[_._v("声音样式属性")]),_._v("：pause-before、pause-after、pause、cue-before、cue-after、cue、play-during")])]),_._v(" "),v("p",[v("strong",[_._v("二、有继承性的属性")])]),_._v(" "),v("ol",[v("li",[v("strong",[_._v("字体系列属性")])])]),_._v(" "),v("ul",[v("li",[_._v("font-family：字体系列")]),_._v(" "),v("li",[_._v("font-weight：字体的粗细")]),_._v(" "),v("li",[_._v("font-size：字体的大小")]),_._v(" "),v("li",[_._v("font-style：字体的风格")])]),_._v(" "),v("ol",[v("li",[v("strong",[_._v("文本系列属性")])])]),_._v(" "),v("ul",[v("li",[_._v("text-indent：文本缩进")]),_._v(" "),v("li",[_._v("text-align：文本水平对齐")]),_._v(" "),v("li",[_._v("line-height：行高")]),_._v(" "),v("li",[_._v("word-spacing：单词之间的间距")]),_._v(" "),v("li",[_._v("letter-spacing：中文或者字母之间的间距")]),_._v(" "),v("li",[_._v("text-transform：控制文本大小写（就是 uppercase、lowercase、capitalize 这三个）")]),_._v(" "),v("li",[_._v("color：文本颜色")])]),_._v(" "),v("ol",[v("li",[v("strong",[_._v("元素可见性")])])]),_._v(" "),v("ul",[v("li",[_._v("visibility：控制元素显示隐藏")])]),_._v(" "),v("ol",[v("li",[v("strong",[_._v("列表布局属性")])])]),_._v(" "),v("ul",[v("li",[_._v("list-style：列表风格，包括 list-style-type、list-style-image 等")])]),_._v(" "),v("ol",[v("li",[v("strong",[_._v("光标属性")])])]),_._v(" "),v("ul",[v("li",[_._v("cursor：光标显示为何种形态")])]),_._v(" "),v("h2",{attrs:{id:"_3-display-的属性值及其作用"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3-display-的属性值及其作用"}},[_._v("#")]),_._v(" 3. display 的属性值及其作用")]),_._v(" "),v("table",[v("thead",[v("tr",[v("th",[v("strong",[_._v("属性值")])]),_._v(" "),v("th",[v("strong",[_._v("作用")])])])]),_._v(" "),v("tbody",[v("tr",[v("td",[_._v("none")]),_._v(" "),v("td",[_._v("元素不显示，并且会从文档流中移除。")])]),_._v(" "),v("tr",[v("td",[_._v("block")]),_._v(" "),v("td",[_._v("块类型。默认宽度为父元素宽度，可设置宽高，换行显示。")])]),_._v(" "),v("tr",[v("td",[_._v("inline")]),_._v(" "),v("td",[_._v("行内元素类型。默认宽度为内容宽度，不可设置宽高，同行显示。")])]),_._v(" "),v("tr",[v("td",[_._v("inline-block")]),_._v(" "),v("td",[_._v("默认宽度为内容宽度，可以设置宽高，同行显示。")])]),_._v(" "),v("tr",[v("td",[_._v("list-item")]),_._v(" "),v("td",[_._v("像块类型元素一样显示，并添加样式列表标记。")])]),_._v(" "),v("tr",[v("td",[_._v("table")]),_._v(" "),v("td",[_._v("此元素会作为块级表格来显示。")])]),_._v(" "),v("tr",[v("td",[_._v("inherit")]),_._v(" "),v("td",[_._v("规定应该从父元素继承 display 属性的值。")])])])]),_._v(" "),v("h2",{attrs:{id:"_4-display-的-block、inline-和-inline-block-的区别"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_4-display-的-block、inline-和-inline-block-的区别"}},[_._v("#")]),_._v(" 4. display 的 block、inline 和 inline-block 的区别")]),_._v(" "),v("p",[_._v("（1）**block：**会独占一行，多个元素会另起一行，可以设置 width、height、margin 和 padding 属性；")]),_._v(" "),v("p",[_._v("（2）**inline：**元素不会独占一行，设置 width、height 属性无效。但可以设置水平方向的 margin 和 padding 属性，不能设置垂直方向的 padding 和 margin；")]),_._v(" "),v("p",[_._v("（3）**inline-block：**将对象设置为 inline 对象，但对象的内容作为 block 对象呈现，之后的内联对象会被排列在同一行内。")]),_._v(" "),v("p",[_._v("对于行内元素和块级元素，其特点如下：")]),_._v(" "),v("p",[v("strong",[_._v("（1）行内元素")])]),_._v(" "),v("ul",[v("li",[_._v("设置宽高无效；")]),_._v(" "),v("li",[_._v("可以设置水平方向的 margin 和 padding 属性，不能设置垂直方向的 padding 和 margin；")]),_._v(" "),v("li",[_._v("不会自动换行；")])]),_._v(" "),v("p",[v("strong",[_._v("（2）块级元素")])]),_._v(" "),v("ul",[v("li",[_._v("可以设置宽高；")]),_._v(" "),v("li",[_._v("设置 margin 和 padding 都有效；")]),_._v(" "),v("li",[_._v("可以自动换行；")]),_._v(" "),v("li",[_._v("多个块状，默认排列从上到下。")])]),_._v(" "),v("h2",{attrs:{id:"_5-隐藏元素的方法有哪些"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_5-隐藏元素的方法有哪些"}},[_._v("#")]),_._v(" 5. 隐藏元素的方法有哪些")]),_._v(" "),v("ul",[v("li",[v("strong",[_._v("display: none")]),_._v("：渲染树不会包含该渲染对象，因此该元素不会在页面中占据位置，也不会响应绑定的监听事件。")]),_._v(" "),v("li",[v("strong",[_._v("visibility: hidden")]),_._v("：元素在页面中仍占据空间，但是不会响应绑定的监听事件。")]),_._v(" "),v("li",[v("strong",[_._v("opacity: 0")]),_._v("：将元素的透明度设置为 0，以此来实现元素的隐藏。元素在页面中仍然占据空间，并且能够响应元素绑定的监听事件。")]),_._v(" "),v("li",[v("strong",[_._v("position: absolute")]),_._v("：通过使用绝对定位将元素移除可视区域内，以此来实现元素的隐藏。")]),_._v(" "),v("li",[v("strong",[_._v("z-index: 负值")]),_._v("：来使其他元素遮盖住该元素，以此来实现隐藏。")]),_._v(" "),v("li",[v("strong",[_._v("clip/clip-path")]),_._v(" ：使用元素裁剪的方法来实现元素的隐藏，这种方法下，元素仍在页面中占据位置，但是不会响应绑定的监听事件。")]),_._v(" "),v("li",[v("strong",[_._v("transform: scale(0,0)")]),_._v("：将元素缩放为 0，来实现元素的隐藏。这种方法下，元素仍在页面中占据位置，但是不会响应绑定的监听事件。")])]),_._v(" "),v("h2",{attrs:{id:"_6-link-和-import-的区别"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_6-link-和-import-的区别"}},[_._v("#")]),_._v(" 6. link 和@import 的区别")]),_._v(" "),v("p",[_._v("两者都是外部引用 CSS 的方式，它们的区别如下：")]),_._v(" "),v("ul",[v("li",[_._v("link 是 XHTML 标签，除了加载 CSS 外，还可以定义 RSS 等其他事务；@import 属于 CSS 范畴，只能加载 CSS。")]),_._v(" "),v("li",[_._v("link 引用 CSS 时，在页面载入时同时加载；@import 需要页面网页完全载入以后加载。")]),_._v(" "),v("li",[_._v("link 是 XHTML 标签，无兼容问题；@import 是在 CSS2.1 提出的，低版本的浏览器不支持。")]),_._v(" "),v("li",[_._v("link 支持使用 Javascript 控制 DOM 去改变样式；而@import 不支持。")])]),_._v(" "),v("h2",{attrs:{id:"_7-transition-和-animation-的区别-了解即可"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_7-transition-和-animation-的区别-了解即可"}},[_._v("#")]),_._v(" 7. transition 和 animation 的区别---了解即可")]),_._v(" "),v("ul",[v("li",[v("strong",[_._v("transition 是过渡属性")]),_._v("，强调过渡，它的实现需要触发一个事件（比如鼠标移动上去，焦点，点击等）才执行动画。它类似于 flash 的补间动画，设置一个开始关键帧，一个结束关键帧。")]),_._v(" "),v("li",[v("strong",[_._v("animation 是动画属性")]),_._v("，它的实现不需要触发事件，设定好时间之后可以自己执行，且可以循环一个动画。它也类似于 flash 的补间动画，但是它可以设置多个关键帧（用@keyframe 定义）完成动画。")])]),_._v(" "),v("h2",{attrs:{id:"_8-display-none-与-visibility-hidden-的区别"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_8-display-none-与-visibility-hidden-的区别"}},[_._v("#")]),_._v(" 8. display:none 与 visibility:hidden 的区别")]),_._v(" "),v("p",[_._v("这两个属性都是让元素隐藏，不可见。两者"),v("strong",[_._v("区别如下：")])]),_._v(" "),v("p",[_._v("（1）"),v("strong",[_._v("在渲染树中")])]),_._v(" "),v("ul",[v("li",[v("code",[_._v("display:none")]),_._v("会让元素完全从渲染树中消失，渲染时不会占据任何空间；")]),_._v(" "),v("li",[v("code",[_._v("visibility:hidden")]),_._v("不会让元素从渲染树中消失，渲染的元素还会占据相应的空间，只是内容不可见。")])]),_._v(" "),v("p",[_._v("（2）是否是"),v("strong",[_._v("继承属性")])]),_._v(" "),v("ul",[v("li",[v("code",[_._v("display:none")]),_._v("是非继承属性，子孙节点会随着父节点从渲染树消失，通过修改子孙节点的属性也无法显示；")]),_._v(" "),v("li",[v("code",[_._v("visibility:hidden")]),_._v("是继承属性，子孙节点消失是由于继承了"),v("code",[_._v("hidden")]),_._v("，通过设置"),v("code",[_._v("visibility:visible")]),_._v("可以让子孙节点显示；")])]),_._v(" "),v("p",[_._v("（3）修改常规文档流中元素的 "),v("code",[_._v("display")]),_._v(" 通常会造成文档的重排（回流），但是修改"),v("code",[_._v("visibility")]),_._v("属性只会造成本元素的重绘；")]),_._v(" "),v("p",[_._v("（4）如果使用读屏器，设置为"),v("code",[_._v("display:none")]),_._v("的内容不会被读取，设置为"),v("code",[_._v("visibility:hidden")]),_._v("的内容会被读取。")]),_._v(" "),v("h2",{attrs:{id:"_9-伪元素和伪类的区别和作用"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_9-伪元素和伪类的区别和作用"}},[_._v("#")]),_._v(" 9. "),v("strong",[_._v("伪元素和伪类的区别和作用？")])]),_._v(" "),v("ul",[v("li",[_._v("伪元素：在内容元素的前后插入额外的元素或样式，但是这些元素实际上不在文档树中。它们只在外部显示可见，因此，称为“伪”元素。例如：")])]),_._v(" "),v("div",{staticClass:"language-css extra-class"},[v("pre",{pre:!0,attrs:{class:"language-css"}},[v("code",[v("span",{pre:!0,attrs:{class:"token selector"}},[_._v("p::before")]),_._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v("{")]),_._v("\n  "),v("span",{pre:!0,attrs:{class:"token property"}},[_._v("content")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(":")]),_._v(" "),v("span",{pre:!0,attrs:{class:"token string"}},[_._v("'第一章：'")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(";")]),_._v("\n"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v("}")]),_._v("\n"),v("span",{pre:!0,attrs:{class:"token selector"}},[_._v("p::after")]),_._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v("{")]),_._v("\n  "),v("span",{pre:!0,attrs:{class:"token property"}},[_._v("content")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(":")]),_._v(" "),v("span",{pre:!0,attrs:{class:"token string"}},[_._v("'Hot!'")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(";")]),_._v("\n"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v("}")]),_._v("\n"),v("span",{pre:!0,attrs:{class:"token selector"}},[_._v("p::first-line")]),_._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v("{")]),_._v("\n  "),v("span",{pre:!0,attrs:{class:"token property"}},[_._v("background")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(":")]),_._v(" red"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(";")]),_._v("\n"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v("}")]),_._v("\n"),v("span",{pre:!0,attrs:{class:"token selector"}},[_._v("p::first-letter")]),_._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v("{")]),_._v("\n  "),v("span",{pre:!0,attrs:{class:"token property"}},[_._v("font-size")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(":")]),_._v(" 30px"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(";")]),_._v("\n"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v("}")]),_._v("\n")])])]),v("blockquote",[v("p",[_._v("伪元素可以创建一些文档语言无法创建的虚拟元素。比如：文档语言没有一种机制可以描述元素内容的第一个字母或第一行，但伪元素可以做到(::first-letter、::first-line)。同时，伪元素还可以创建源文档不存在的内容，比如使用::before 或 ::after。")])]),_._v(" "),v("ul",[v("li",[_._v("伪类：将特殊的效果添加到特定选择器上。它是已有元素上添加类别的，不会产生新的元素。例如：")])]),_._v(" "),v("div",{staticClass:"language-css extra-class"},[v("pre",{pre:!0,attrs:{class:"language-css"}},[v("code",[v("span",{pre:!0,attrs:{class:"token selector"}},[_._v("a:hover")]),_._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v("{")]),_._v("\n  "),v("span",{pre:!0,attrs:{class:"token property"}},[_._v("color")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(":")]),_._v(" #ff00ff"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(";")]),_._v("\n"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v("}")]),_._v("\n"),v("span",{pre:!0,attrs:{class:"token selector"}},[_._v("p:first-child")]),_._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v("{")]),_._v("\n  "),v("span",{pre:!0,attrs:{class:"token property"}},[_._v("color")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(":")]),_._v(" red"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(";")]),_._v("\n"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v("}")]),_._v("\n")])])]),v("p",[v("strong",[_._v("总结："),v("strong",[_._v("伪类是通过在元素选择器上加⼊伪类改变元素状态，⽽伪元素通过对元素的操作进行对元素的改变。伪元素和伪类都")]),_._v("不会出现在源文档或者文档树中")]),_._v("。")]),_._v(" "),v("h2",{attrs:{id:"_10-对-requestanimationframe-的理解"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_10-对-requestanimationframe-的理解"}},[_._v("#")]),_._v(" 10. 对 requestAnimationframe 的理解")]),_._v(" "),v("p",[_._v("实现动画效果的方法比较多，Javascript 中可以通过定时器 setTimeout 来实现，CSS3 中可以使用 transition 和 animation 来实现，HTML5 中的 canvas 也可以实现。除此之外，HTML5 提供一个专门用于请求动画的 API，那就是 requestAnimationFrame，顾名思义就是"),v("strong",[_._v("请求动画帧")]),_._v("。")]),_._v(" "),v("p",[_._v("MDN 对该方法的描述：")]),_._v(" "),v("blockquote",[v("p",[v("code",[_._v("window.requestAnimationFrame()")]),_._v(" 告诉浏览器——你希望执行一个动画，并且要求浏览器在下次重绘之前调用指定的回调函数更新动画。该方法需要传入一个回调函数作为参数，该回调函数会在浏览器下一次重绘之前执行。")])]),_._v(" "),v("p",[v("strong",[_._v("语法：")]),_._v(" "),v("code",[_._v("window.requestAnimationFrame(callback);")]),_._v(" 其中，callback 是"),v("strong",[_._v("下一次重绘之前更新动画帧所调用的函数")]),_._v("(即上面所说的回调函数)。该回调函数会被传入 DOMHighResTimeStamp 参数，它表示 requestAnimationFrame() 开始去执行回调函数的时刻。该方法属于"),v("strong",[_._v("宏任务")]),_._v("，所以会在执行完微任务之后再去执行。")]),_._v(" "),v("p",[_._v("**取消动画：**使用 cancelAnimationFrame()来取消执行动画，该方法接收一个参数——requestAnimationFrame 默认返回的 id，只需要传入这个 id 就可以取消动画了。")]),_._v(" "),v("p",[v("strong",[_._v("优势：")])]),_._v(" "),v("ul",[v("li",[v("strong",[_._v("CPU 节能")]),_._v("：使用 SetTinterval 实现的动画，当页面被隐藏或最小化时，SetTinterval 仍然在后台执行动画任务，由于此时页面处于不可见或不可用状态，刷新动画是没有意义的，完全是浪费 CPU 资源。而 RequestAnimationFrame 则完全不同，当页面处理未激活的状态下，该页面的屏幕刷新任务也会被系统暂停，因此跟着系统走的 RequestAnimationFrame 也会停止渲染，当页面被激活时，动画就从上次停留的地方继续执行，有效节省了 CPU 开销。")]),_._v(" "),v("li",[v("strong",[_._v("函数节流")]),_._v("：在高频率事件( resize, scroll 等)中，为了防止在一个刷新间隔内发生多次函数执行，RequestAnimationFrame 可保证每个刷新间隔内，函数只被执行一次，这样既能保证流畅性，也能更好的节省函数执行的开销，一个刷新间隔内函数执行多次时没有意义的，因为多数显示器每 16.7ms 刷新一次，多次绘制并不会在屏幕上体现出来。")]),_._v(" "),v("li",[v("strong",[_._v("减少 DOM 操作")]),_._v("：requestAnimationFrame 会把每一帧中的所有 DOM 操作集中起来，在一次重绘或回流中就完成，并且重绘或回流的时间间隔紧紧跟随浏览器的刷新频率，一般来说，这个频率为每秒 60 帧。")])]),_._v(" "),v("p",[v("strong",[_._v("setTimeout 执行动画的缺点")]),_._v("：它通过设定间隔时间来不断改变图像位置，达到动画效果。但是容易出现卡顿、抖动的现象；原因是：")]),_._v(" "),v("ul",[v("li",[_._v("settimeout 任务被放入异步队列，只有当主线程任务执行完后才会执行队列中的任务，因此实际执行时间总是比设定时间要晚；")]),_._v(" "),v("li",[_._v("settimeout 的固定时间间隔不一定与屏幕刷新间隔时间相同，会引起丢帧。")])]),_._v(" "),v("h2",{attrs:{id:"_11-对盒模型的理解"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_11-对盒模型的理解"}},[_._v("#")]),_._v(" 11. 对盒模型的理解")]),_._v(" "),v("p",[_._v("CSS3 中的盒模型有以下两种：标准盒子模型、IE 盒子模型")]),_._v(" "),v("p",[v("img",{attrs:{src:"F:/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF/VuePress/Blog-VuePress/docs/htmlcss/css/assets/15.png",alt:"image"}})]),_._v(" "),v("p",[v("img",{attrs:{src:"F:/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF/VuePress/Blog-VuePress/docs/htmlcss/css/assets/16.png",alt:"img"}})]),_._v(" "),v("p",[_._v("盒模型都是由四个部分组成的，分别是 margin、border、padding 和 content。")]),_._v(" "),v("p",[_._v("标准盒模型和 IE 盒模型的区别在于设置 width 和 height 时，所对应的范围不同：")]),_._v(" "),v("ul",[v("li",[_._v("标准盒模型的 width 和 height 属性的范围只包含了 content，")]),_._v(" "),v("li",[_._v("IE 盒模型的 width 和 height 属性的范围包含了 border、padding 和 content。")])]),_._v(" "),v("p",[_._v("可以通过修改元素的 box-sizing 属性来改变元素的盒模型：")]),_._v(" "),v("ul",[v("li",[v("code",[_._v("box-sizing: content-box")]),_._v("表示标准盒模型（默认值）")]),_._v(" "),v("li",[v("code",[_._v("box-sizing: border-box")]),_._v("表示 IE 盒模型（怪异盒模型）")])]),_._v(" "),v("h2",{attrs:{id:"_12-为什么有时候用translate来改变位置而不是定位"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_12-为什么有时候用translate来改变位置而不是定位"}},[_._v("#")]),_._v(" 12. 为什么有时候用"),v("strong",[_._v("translate")]),_._v("来改变位置而不是定位？")]),_._v(" "),v("ul",[v("li",[_._v("translate 是 transform 属性的⼀个值。改变 transform 或 opacity 不会触发浏览器重新布局（回流）（reflow）或重绘（repaint），只会触发复合（compositions）。而改变绝对定位会触发重新布局，进而触发重绘和复合。")]),_._v(" "),v("li",[_._v("transform 使浏览器为元素创建⼀个 GPU 图层，但改变绝对定位会使用到 CPU。 因此 translate()更⾼效，可以缩短平滑动画的绘制时间。")]),_._v(" "),v("li",[_._v("translate 改变位置时，元素依然会占据其原始空间，绝对定位就不会发生这种情况。")])]),_._v(" "),v("h2",{attrs:{id:"_13-li-与-li-之间有看不见的空白间隔是什么原因引起的-如何解决"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_13-li-与-li-之间有看不见的空白间隔是什么原因引起的-如何解决"}},[_._v("#")]),_._v(" 13. li 与 li 之间有看不见的空白间隔是什么原因引起的？如何解决？")]),_._v(" "),v("p",[_._v("浏览器会把 inline 内联元素间的空白字符（空格、换行、Tab 等）渲染成一个空格。为了美观，通常是一个"),v("code",[_._v("<li>")]),_._v("放在一行，这导致"),v("code",[_._v("<li>")]),_._v("换行后产生换行字符，它变成一个空格，占用了一个字符的宽度。")]),_._v(" "),v("p",[v("strong",[_._v("解决办法：")])]),_._v(" "),v("p",[_._v("（1）为"),v("code",[_._v("<li>")]),_._v("设置 float:left。不足：有些容器是不能设置浮动，如左右切换的焦点图等。")]),_._v(" "),v("p",[_._v("（2）将所有"),v("code",[_._v("<li>")]),_._v("写在同一行。不足：代码不美观。")]),_._v(" "),v("p",[_._v("（3）将"),v("code",[_._v("<ul>")]),_._v("内的字符尺寸直接设为 0，即 font-size:0。不足："),v("code",[_._v("<ul>")]),_._v("中的其他字符尺寸也被设为 0，需要额外重新设定其他字符尺寸，且在 Safari 浏览器依然会出现空白间隔。")]),_._v(" "),v("p",[_._v("（4）消除"),v("code",[_._v("<ul>")]),_._v("的字符间隔 letter-spacing:-8px，不足：这也设置了"),v("code",[_._v("<li>")]),_._v("内的字符间隔，因此需要将"),v("code",[_._v("<li>")]),_._v("内的字符间隔设为默认 letter-spacing:normal。")]),_._v(" "),v("h2",{attrs:{id:"_14-css3-中有哪些新特性"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_14-css3-中有哪些新特性"}},[_._v("#")]),_._v(" 14. CSS3 中有哪些新特性")]),_._v(" "),v("ul",[v("li",[_._v("新增各种 CSS 选择器 （"),v("code",[_._v(":not(.input)")]),_._v("：所有 class 不是“input”的节点）")]),_._v(" "),v("li",[_._v("圆角 （border-radius:8px）")]),_._v(" "),v("li",[_._v("多列布局 （multi-column layout）")]),_._v(" "),v("li",[_._v("阴影和反射 （Shadoweflect）")]),_._v(" "),v("li",[_._v("文字特效 （text-shadow）")]),_._v(" "),v("li",[_._v("文字渲染 （text-decoration）")]),_._v(" "),v("li",[_._v("线性渐变 （gradient）")]),_._v(" "),v("li",[_._v("旋转 （transform）")]),_._v(" "),v("li",[_._v("增加了旋转,缩放,定位,倾斜,动画,多背景")])]),_._v(" "),v("h2",{attrs:{id:"_15-替换元素的概念及计算规则-不需要看"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_15-替换元素的概念及计算规则-不需要看"}},[_._v("#")]),_._v(" 15. 替换元素的概念及计算规则---不需要看")]),_._v(" "),v("p",[_._v("通过修改某个属性值呈现的内容就可以被替换的元素就称为“替换元素”。")]),_._v(" "),v("p",[_._v("替换元素除了内容可替换这一特性以外，还有以下特性：")]),_._v(" "),v("ul",[v("li",[v("strong",[_._v("内容的外观不受页面上的 CSS 的影响")]),_._v("：用专业的话讲就是在样式表现在 CSS 作用域之外。如何更改替换元素本身的外观需要类似 appearance 属性，或者浏览器自身暴露的一些样式接口。")]),_._v(" "),v("li",[v("strong",[_._v("有自己的尺寸")]),_._v("：在 Web 中，很多替换元素在没有明确尺寸设定的情况下，其默认的尺寸（不包括边框）是 300 像素 ×150 像素，如")]),_._v(" "),v("li",[v("strong",[_._v("在很多 CSS 属性上有自己的一套表现规则")]),_._v("：比较具有代表性的就是 vertical-align 属性，对于替换元素和非替换元素，vertical-align 属性值的解释是不一样的。比方说 vertical-align 的默认值的 baseline，很简单的属性值，基线之意，被定义为字符 x 的下边缘，而替换元素的基线却被硬生生定义成了元素的下边缘。")]),_._v(" "),v("li",[v("strong",[_._v("所有的替换元素都是内联水平元素")]),_._v("：也就是替换元素和替换元素、替换元素和文字都是可以在一行显示的。但是，替换元素默认的 display 值却是不一样的，有的是 inline，有的是 inline-block。")])]),_._v(" "),v("p",[_._v("替换元素的尺寸从内而外分为三类：")]),_._v(" "),v("ul",[v("li",[v("strong",[_._v("固有尺寸：")]),_._v(" 指的是替换内容原本的尺寸。例如，图片、视频作为一个独立文件存在的时候，都是有着自己的宽度和高度的。")]),_._v(" "),v("li",[v("strong",[_._v("HTML 尺寸：")]),_._v(" 只能通过 HTML 原生属性改变，这些 HTML 原生属性包括的 width 和 height 属性、的 size 属性。")]),_._v(" "),v("li",[v("strong",[_._v("CSS 尺寸：")]),_._v(" 特指可以通过 CSS 的 width 和 height 或者 max-width/min-width 和 max-height/min-height 设置的尺寸，对应盒尺寸中的 content box。")])]),_._v(" "),v("p",[_._v("这三层结构的计算规则具体如下：")]),_._v(" "),v("p",[_._v("（1）如果没有 CSS 尺寸和 HTML 尺寸，则使用固有尺寸作为最终的宽高。")]),_._v(" "),v("p",[_._v("（2）如果没有 CSS 尺寸，则使用 HTML 尺寸作为最终的宽高。")]),_._v(" "),v("p",[_._v("（3）如果有 CSS 尺寸，则最终尺寸由 CSS 属性决定。")]),_._v(" "),v("p",[_._v("（4）如果“固有尺寸”含有固有的宽高比例，同时仅设置了宽度或仅设置了高度，则元素依然按照固有的宽高比例显示。")]),_._v(" "),v("p",[_._v("（5）如果上面的条件都不符合，则最终宽度表现为 300 像素，高度为 150 像素。")]),_._v(" "),v("p",[_._v("（6）内联替换元素和块级替换元素使用上面同一套尺寸计算规则。")]),_._v(" "),v("h2",{attrs:{id:"_16-常见的图片格式及使用场景"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_16-常见的图片格式及使用场景"}},[_._v("#")]),_._v(" 16. 常见的图片格式及使用场景")]),_._v(" "),v("p",[_._v("（1）"),v("strong",[_._v("BMP")]),_._v("，是无损的、既支持索引色也支持直接色的点阵图。这种图片格式几乎没有对数据进行压缩，所以 BMP 格式的图片通常是较大的文件。")]),_._v(" "),v("p",[_._v("（2）"),v("strong",[_._v("GIF")]),_._v("是无损的、采用索引色的点阵图。采用 LZW 压缩算法进行编码。文件小，是 GIF 格式的优点，同时，GIF 格式还具有支持动画以及透明的优点。但是 GIF 格式仅支持 8bit 的索引色，所以 GIF 格式适用于对色彩要求不高同时需要文件体积较小的场景。")]),_._v(" "),v("p",[_._v("（3）"),v("strong",[_._v("JPEG")]),_._v("是有损的、采用直接色的点阵图。JPEG 的图片的优点是采用了直接色，得益于更丰富的色彩，JPEG 非常适合用来存储照片，与 GIF 相比，JPEG 不适合用来存储企业 Logo、线框类的图。因为有损压缩会导致图片模糊，而直接色的选用，又会导致图片文件较 GIF 更大。")]),_._v(" "),v("p",[_._v("（4）"),v("strong",[_._v("PNG-8")]),_._v("是无损的、使用索引色的点阵图。PNG 是一种比较新的图片格式，PNG-8 是非常好的 GIF 格式替代者，在可能的情况下，应该尽可能的使用 PNG-8 而不是 GIF，因为在相同的图片效果下，PNG-8 具有更小的文件体积。除此之外，PNG-8 还支持透明度的调节，而 GIF 并不支持。除非需要动画的支持，否则没有理由使用 GIF 而不是 PNG-8。")]),_._v(" "),v("p",[_._v("（5）"),v("strong",[_._v("PNG-24")]),_._v("是无损的、使用直接色的点阵图。PNG-24 的优点在于它压缩了图片的数据，使得同样效果的图片，PNG-24 格式的文件大小要比 BMP 小得多。当然，PNG24 的图片还是要比 JPEG、GIF、PNG-8 大得多。")]),_._v(" "),v("p",[_._v("（6）"),v("strong",[_._v("SVG")]),_._v("是无损的矢量图。SVG 是矢量图意味着 SVG 图片由直线和曲线以及绘制它们的方法组成。当放大 SVG 图片时，看到的还是线和曲线，而不会出现像素点。SVG 图片在放大时，不会失真，所以它适合用来绘制 Logo、Icon 等。")]),_._v(" "),v("p",[_._v("（7）"),v("strong",[_._v("WebP")]),_._v("是谷歌开发的一种新图片格式，WebP 是同时支持有损和无损压缩的、使用直接色的点阵图。从名字就可以看出来它是为 Web 而生的，什么叫为 Web 而生呢？就是说相同质量的图片，WebP 具有更小的文件体积。现在网站上充满了大量的图片，如果能够降低每一个图片的文件大小，那么将大大减少浏览器和服务器之间的数据传输量，进而降低访问延迟，提升访问体验。目前只有 Chrome 浏览器和 Opera 浏览器支持 WebP 格式，兼容性不太好。")]),_._v(" "),v("ul",[v("li",[_._v("在无损压缩的情况下，相同质量的 WebP 图片，文件大小要比 PNG 小 26%；")]),_._v(" "),v("li",[_._v("在有损压缩的情况下，具有相同图片精度的 WebP 图片，文件大小要比 JPEG 小 25%~34%；")]),_._v(" "),v("li",[_._v("WebP 图片格式支持图片透明度，一个无损压缩的 WebP 图片，如果要支持透明度只需要 22%的格外文件大小。")])]),_._v(" "),v("h2",{attrs:{id:"_17-对-csssprites-的理解-了解即可"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_17-对-csssprites-的理解-了解即可"}},[_._v("#")]),_._v(" 17. 对 CSSSprites 的理解---了解即可")]),_._v(" "),v("p",[_._v("CSSSprites（精灵图），将一个页面涉及到的所有图片都包含到一张大图中去，然后利用 CSS 的 background-image，background-repeat，background-position 属性的组合进行背景定位。")]),_._v(" "),v("p",[v("strong",[_._v("优点：")])]),_._v(" "),v("ul",[v("li",[_._v("利用"),v("code",[_._v("CSS Sprites")]),_._v("能很好地减少网页的 http 请求，从而大大提高了页面的性能，这是"),v("code",[_._v("CSS Sprites")]),_._v("最大的优点；")]),_._v(" "),v("li",[v("code",[_._v("CSS Sprites")]),_._v("能减少图片的字节，把 3 张图片合并成 1 张图片的字节总是小于这 3 张图片的字节总和。")])]),_._v(" "),v("p",[v("strong",[_._v("缺点：")])]),_._v(" "),v("ul",[v("li",[_._v("在图片合并时，要把多张图片有序的、合理的合并成一张图片，还要留好足够的空间，防止板块内出现不必要的背景。在宽屏及高分辨率下的自适应页面，如果背景不够宽，很容易出现背景断裂；")]),_._v(" "),v("li",[v("code",[_._v("CSSSprites")]),_._v("在开发的时候相对来说有点麻烦，需要借助"),v("code",[_._v("photoshop")]),_._v("或其他工具来对每个背景单元测量其准确的位置。")]),_._v(" "),v("li",[_._v("维护方面："),v("code",[_._v("CSS Sprites")]),_._v("在维护的时候比较麻烦，页面背景有少许改动时，就要改这张合并的图片，无需改的地方尽量不要动，这样避免改动更多的"),v("code",[_._v("CSS")]),_._v("，如果在原来的地方放不下，又只能（最好）往下加图片，这样图片的字节就增加了，还要改动"),v("code",[_._v("CSS")]),_._v("。")])]),_._v(" "),v("h2",{attrs:{id:"_18-什么是物理像素-逻辑像素和像素密度-为什么在移动端开发时需要用到-3x-2x-这种图片"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_18-什么是物理像素-逻辑像素和像素密度-为什么在移动端开发时需要用到-3x-2x-这种图片"}},[_._v("#")]),_._v(" 18. 什么是物理像素，逻辑像素和像素密度，为什么在移动端开发时需要用到@3x, @2x 这种图片？")]),_._v(" "),v("p",[_._v("以 iPhone XS 为例，当写 CSS 代码时，针对于单位 px，其宽度为 414px & 896px，也就是说当赋予一个 DIV 元素宽度为 414px，这个 DIV 就会填满手机的宽度；")]),_._v(" "),v("p",[_._v("而如果有一把尺子来实际测量这部手机的物理像素，实际为 1242*2688 物理像素；经过计算可知，1242/414=3，也就是说，在单边上，一个逻辑像素=3 个物理像素，就说这个屏幕的像素密度为 3，也就是常说的 3 倍屏。")]),_._v(" "),v("p",[_._v("对于图片来说，为了保证其不失真，1 个图片像素至少要对应一个物理像素，假如原始图片是 500300 像素，那么在 3 倍屏上就要放一个 1500900 像素的图片才能保证 1 个物理像素至少对应一个图片像素，才能不失真。")]),_._v(" "),v("p",[v("img",{attrs:{src:"F:/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF/VuePress/Blog-VuePress/docs/htmlcss/css/assets/17.jpg",alt:"img"}})]),_._v(" "),v("p",[_._v("当然，也可以针对所有屏幕，都只提供最高清图片。虽然低密度屏幕用不到那么多图片像素，而且会因为下载多余的像素造成带宽浪费和下载延迟，但从结果上说能保证图片在所有屏幕上都不会失真。")]),_._v(" "),v("p",[_._v("还可以使用 CSS 媒体查询来判断不同的像素密度，从而选择不同的图片:")]),_._v(" "),v("div",{staticClass:"language-css extra-class"},[v("pre",{pre:!0,attrs:{class:"language-css"}},[v("code",[v("span",{pre:!0,attrs:{class:"token selector"}},[_._v("my-image")]),_._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v("{")]),_._v("\n  "),v("span",{pre:!0,attrs:{class:"token property"}},[_._v("background")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(":")]),_._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v("(")]),_._v("low.png"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(")")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(";")]),_._v("\n"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v("}")]),_._v("\n"),v("span",{pre:!0,attrs:{class:"token atrule"}},[v("span",{pre:!0,attrs:{class:"token rule"}},[_._v("@media")]),_._v(" "),v("span",{pre:!0,attrs:{class:"token keyword"}},[_._v("only")]),_._v(" screen "),v("span",{pre:!0,attrs:{class:"token keyword"}},[_._v("and")]),_._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v("(")]),v("span",{pre:!0,attrs:{class:"token property"}},[_._v("min-device-pixel-ratio")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(":")]),_._v(" 1.5"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(")")])]),_._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v("{")]),_._v("\n  "),v("span",{pre:!0,attrs:{class:"token selector"}},[_._v("#my-image")]),_._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v("{")]),_._v("\n    "),v("span",{pre:!0,attrs:{class:"token property"}},[_._v("background")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(":")]),_._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v("(")]),_._v("high.png"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(")")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(";")]),_._v("\n  "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v("}")]),_._v("\n"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v("}")]),_._v("\n")])])]),v("h2",{attrs:{id:"_19-margin-和-padding-的使用场景"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_19-margin-和-padding-的使用场景"}},[_._v("#")]),_._v(" 19. "),v("strong",[_._v("margin 和 padding 的使用场景")])]),_._v(" "),v("ul",[v("li",[_._v("需要在 border 外侧添加空白，且空白处不需要背景（色）时，使用 margin；")]),_._v(" "),v("li",[_._v("需要在 border 内测添加空白，且空白处需要背景（色）时，使用 padding。")])]),_._v(" "),v("h2",{attrs:{id:"_20-对line-height-的理解及其赋值方式"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_20-对line-height-的理解及其赋值方式"}},[_._v("#")]),_._v(" 20. 对"),v("strong",[_._v("line-height 的理解及其赋值方式")])]),_._v(" "),v("p",[v("strong",[_._v("（1）line-height 的概念：")])]),_._v(" "),v("ul",[v("li",[_._v("line-height 指一行文本的高度，包含了字间距，实际上是下一行基线到上一行基线距离；")]),_._v(" "),v("li",[_._v("如果一个标签没有定义 height 属性，那么其最终表现的高度由 line-height 决定；")]),_._v(" "),v("li",[_._v("一个容器没有设置高度，那么撑开容器高度的是 line-height，而不是容器内的文本内容；")]),_._v(" "),v("li",[_._v("把 line-height 值设置为 height 一样大小的值可以实现单行文字的垂直居中；")]),_._v(" "),v("li",[_._v("line-height 和 height 都能撑开一个高度；")])]),_._v(" "),v("p",[v("strong",[_._v("（2）line-height 的赋值方式：")])]),_._v(" "),v("ul",[v("li",[_._v("带单位：px 是固定值，而 em 会参考父元素 font-size 值计算自身的行高")]),_._v(" "),v("li",[_._v("纯数字：会把比例传递给后代。例如，父级行高为 1.5，子元素字体为 18px，则子元素行高为 1.5 * 18 = 27px")]),_._v(" "),v("li",[_._v("百分比：将计算后的值传递给后代")])]),_._v(" "),v("h2",{attrs:{id:"_21-css-优化和提高性能的方法有哪些"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_21-css-优化和提高性能的方法有哪些"}},[_._v("#")]),_._v(" 21. CSS 优化和提高性能的方法有哪些？")]),_._v(" "),v("p",[v("strong",[_._v("加载性能：")])]),_._v(" "),v("p",[_._v("（1）css 压缩：将写好的 css 进行打包压缩，可以减小文件体积。")]),_._v(" "),v("p",[_._v("（2）css 单一样式：当需要下边距和左边距的时候，很多时候会选择使用 margin:top 0 bottom 0；但 margin-bottom:bottom;margin-left:left;执行效率会更高。")]),_._v(" "),v("p",[_._v("（3）减少使用@import，建议使用 link，因为后者在页面加载时一起加载，前者是等待页面加载完成之后再进行加载。")]),_._v(" "),v("p",[v("strong",[_._v("选择器性能：")])]),_._v(" "),v("p",[_._v("（1）关键选择器（key selector）。选择器的最后面的部分为关键选择器（即用来匹配目标元素的部分）。CSS 选择符是从右到左进行匹配的。当使用后代选择器的时候，浏览器会遍历所有子元素来确定是否是指定的元素等等；")]),_._v(" "),v("p",[_._v("（2）如果规则拥有 ID 选择器作为其关键选择器，则不要为规则增加标签。过滤掉无关的规则（这样样式系统就不会浪费时间去匹配它们了）。")]),_._v(" "),v("p",[_._v("（3）避免使用通配规则，如*{}计算次数惊人，只对需要用到的元素进行选择。")]),_._v(" "),v("p",[_._v("（4）尽量少的去对标签进行选择，而是用 class。")]),_._v(" "),v("p",[_._v("（5）尽量少的去使用后代选择器，降低选择器的权重值。后代选择器的开销是最高的，尽量将选择器的深度降到最低，最高不要超过三层，更多的使用类来关联每一个标签元素。")]),_._v(" "),v("p",[_._v("（6）了解哪些属性是可以通过继承而来的，然后避免对这些属性重复指定规则。")]),_._v(" "),v("p",[v("strong",[_._v("渲染性能：")])]),_._v(" "),v("p",[_._v("（1）慎重使用高性能属性：浮动、定位。")]),_._v(" "),v("p",[_._v("（2）尽量减少页面重排、重绘。")]),_._v(" "),v("p",[_._v("（3）去除空规则：｛｝。空规则的产生原因一般来说是为了预留样式。去除这些空规则无疑能减少 css 文档体积。")]),_._v(" "),v("p",[_._v("（4）属性值为 0 时，不加单位。")]),_._v(" "),v("p",[_._v("（5）属性值为浮动小数 0.**，可以省略小数点之前的 0。")]),_._v(" "),v("p",[_._v("（6）标准化各种浏览器前缀：带浏览器前缀的在前。标准属性在后。")]),_._v(" "),v("p",[_._v("（7）不使用@import 前缀，它会影响 css 的加载速度。")]),_._v(" "),v("p",[_._v("（8）选择器优化嵌套，尽量避免层级过深。")]),_._v(" "),v("p",[_._v("（9）css 雪碧图，同一页面相近部分的小图标，方便使用，减少页面的请求次数，但是同时图片本身会变大，使用时，优劣考虑清楚，再使用。")]),_._v(" "),v("p",[_._v("（10）正确使用 display 的属性，由于 display 的作用，某些样式组合会无效，徒增样式体积的同时也影响解析性能。")]),_._v(" "),v("p",[_._v("（11）不滥用 web 字体。对于中文网站来说 WebFonts 可能很陌生，国外却很流行。web fonts 通常体积庞大，而且一些浏览器在下载 web fonts 时会阻塞页面渲染损伤性能。")]),_._v(" "),v("p",[v("strong",[_._v("可维护性、健壮性：")])]),_._v(" "),v("p",[_._v("（1）将具有相同属性的样式抽离出来，整合并通过 class 在页面中进行使用，提高 css 的可维护性。")]),_._v(" "),v("p",[_._v("（2）样式与内容分离：将 css 代码定义到外部 css 中。")]),_._v(" "),v("h2",{attrs:{id:"_22-css-预处理器-后处理器是什么-为什么要使用它们"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_22-css-预处理器-后处理器是什么-为什么要使用它们"}},[_._v("#")]),_._v(" 22. CSS 预处理器/后处理器是什么？为什么要使用它们？")]),_._v(" "),v("p",[_._v("**预处理器，**如："),v("code",[_._v("less")]),_._v("，"),v("code",[_._v("sass")]),_._v("，"),v("code",[_._v("stylus")]),_._v("，用来预编译"),v("code",[_._v("sass")]),_._v("或者"),v("code",[_._v("less")]),_._v("，增加了"),v("code",[_._v("css")]),_._v("代码的复用性。层级，"),v("code",[_._v("mixin")]),_._v("， 变量，循环， 函数等对编写以及开发 UI 组件都极为方便。")]),_._v(" "),v("p",[v("strong",[_._v("后处理器，")]),_._v(" 如： "),v("code",[_._v("postCss")]),_._v("，通常是在完成的样式表中根据"),v("code",[_._v("css")]),_._v("规范处理"),v("code",[_._v("css")]),_._v("，让其更加有效。目前最常做的是给"),v("code",[_._v("css")]),_._v("属性添加浏览器私有前缀，实现跨浏览器兼容性的问题。")]),_._v(" "),v("p",[v("code",[_._v("css")]),_._v("预处理器为"),v("code",[_._v("css")]),_._v("增加一些编程特性，无需考虑浏览器的兼容问题，可以在"),v("code",[_._v("CSS")]),_._v("中使用变量，简单的逻辑程序，函数等在编程语言中的一些基本的性能，可以让"),v("code",[_._v("css")]),_._v("更加的简洁，增加适应性以及可读性，可维护性等。")]),_._v(" "),v("p",[_._v("其它"),v("code",[_._v("css")]),_._v("预处理器语言："),v("code",[_._v("Sass（Scss）")]),_._v(", "),v("code",[_._v("Less")]),_._v(", "),v("code",[_._v("Stylus")]),_._v(", "),v("code",[_._v("Turbine")]),_._v(", "),v("code",[_._v("Swithch css")]),_._v(", "),v("code",[_._v("CSS Cacheer")]),_._v(", "),v("code",[_._v("DT Css")]),_._v("。")]),_._v(" "),v("p",[_._v("使用原因：")]),_._v(" "),v("ul",[v("li",[_._v("结构清晰， 便于扩展")]),_._v(" "),v("li",[_._v("可以很方便的屏蔽浏览器私有语法的差异")]),_._v(" "),v("li",[_._v("可以轻松实现多重继承")]),_._v(" "),v("li",[_._v("完美的兼容了"),v("code",[_._v("CSS")]),_._v("代码，可以应用到老项目中")])]),_._v(" "),v("h2",{attrs:{id:"_23-before-和-after-的双冒号和单冒号有什么区别"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_23-before-和-after-的双冒号和单冒号有什么区别"}},[_._v("#")]),_._v(" 23. ::before 和 :after 的双冒号和单冒号有什么区别？")]),_._v(" "),v("p",[_._v("（1）冒号("),v("code",[_._v(":")]),_._v(")用于"),v("code",[_._v("CSS3")]),_._v("伪类，双冒号("),v("code",[_._v("::")]),_._v(")用于"),v("code",[_._v("CSS3")]),_._v("伪元素。")]),_._v(" "),v("p",[_._v("（2）"),v("code",[_._v("::before")]),_._v("就是以一个子元素的存在，定义在元素主体内容之前的一个伪元素。并不存在于"),v("code",[_._v("dom")]),_._v("之中，只存在在页面之中。")]),_._v(" "),v("p",[v("strong",[_._v("注意：")]),_._v(" "),v("code",[_._v(":before")]),_._v("和 "),v("code",[_._v(":after")]),_._v(" 这两个伪元素，是在"),v("code",[_._v("CSS2.1")]),_._v("里新出现的。起初，伪元素的前缀使用的是单冒号语法，但随着"),v("code",[_._v("Web")]),_._v("的进化，在"),v("code",[_._v("CSS3")]),_._v("的规范里，伪元素的语法被修改成使用双冒号，成为"),v("code",[_._v("::before")]),_._v("、"),v("code",[_._v("::after")]),_._v("。")]),_._v(" "),v("h2",{attrs:{id:"_24-display-inline-block-什么时候会显示间隙"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_24-display-inline-block-什么时候会显示间隙"}},[_._v("#")]),_._v(" 24. display:inline-block 什么时候会显示间隙？")]),_._v(" "),v("ul",[v("li",[_._v("有空格时会有间隙，可以删除空格解决；")]),_._v(" "),v("li",[v("code",[_._v("margin")]),_._v("正值时，可以让"),v("code",[_._v("margin")]),_._v("使用负值解决；")]),_._v(" "),v("li",[_._v("使用"),v("code",[_._v("font-size")]),_._v("时，可通过设置"),v("code",[_._v("font-size:0")]),_._v("、"),v("code",[_._v("letter-spacing")]),_._v("、"),v("code",[_._v("word-spacing")]),_._v("解决；")])]),_._v(" "),v("h2",{attrs:{id:"_25-单行、多行文本溢出隐藏"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_25-单行、多行文本溢出隐藏"}},[_._v("#")]),_._v(" 25. 单行、多行文本溢出隐藏")]),_._v(" "),v("ul",[v("li",[_._v("单行文本溢出")])]),_._v(" "),v("div",{staticClass:"language-css extra-class"},[v("pre",{pre:!0,attrs:{class:"language-css"}},[v("code",[v("span",{pre:!0,attrs:{class:"token property"}},[_._v("overflow")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(":")]),_._v(" hidden"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(";")]),_._v(" // 溢出隐藏\n"),v("span",{pre:!0,attrs:{class:"token property"}},[_._v("text-overflow")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(":")]),_._v(" ellipsis"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(";")]),_._v(" // 溢出用省略号显示\n"),v("span",{pre:!0,attrs:{class:"token property"}},[_._v("white-space")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(":")]),_._v(" nowrap"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(";")]),_._v(" // 规定段落中的文本不进行换行\n")])])]),v("ul",[v("li",[_._v("多行文本溢出")])]),_._v(" "),v("div",{staticClass:"language-css extra-class"},[v("pre",{pre:!0,attrs:{class:"language-css"}},[v("code",[v("span",{pre:!0,attrs:{class:"token property"}},[_._v("overflow")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(":")]),_._v(" hidden"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(";")]),_._v(" // 溢出隐藏\n"),v("span",{pre:!0,attrs:{class:"token property"}},[_._v("text-overflow")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(":")]),_._v(" ellipsis"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(";")]),_._v(" // 溢出用省略号显示\n"),v("span",{pre:!0,attrs:{class:"token property"}},[_._v("display")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(":")]),_._v(" -webkit-box"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(";")]),_._v(" // 作为弹性伸缩盒子模型显示。\n"),v("span",{pre:!0,attrs:{class:"token property"}},[_._v("-webkit-box-orient")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(":")]),_._v(" vertical"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(";")]),_._v(" // 设置伸缩盒子的子元素排列方式：从上到下垂直排列\n"),v("span",{pre:!0,attrs:{class:"token property"}},[_._v("-webkit-line-clamp")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(":")]),_._v(" 3"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(";")]),_._v(" // 显示的行数\n")])])]),v("p",[_._v("注意：由于上面的三个属性都是 CSS3 的属性，不是所有浏览器都可以兼容，所以要在前面加一个"),v("code",[_._v("-webkit-")]),_._v(" 来兼容一部分浏览器。")]),_._v(" "),v("h2",{attrs:{id:"_26-sass、less-是什么-为什么要使用他们"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_26-sass、less-是什么-为什么要使用他们"}},[_._v("#")]),_._v(" 26. Sass、Less 是什么？为什么要使用他们？")]),_._v(" "),v("p",[_._v("他们都是 CSS 预处理器，是 CSS 上的一种抽象层。他们是一种特殊的语法/语言编译成 CSS。 例如 Less 是一种动态样式语言，将 CSS 赋予了动态语言的特性，如变量，继承，运算， 函数，LESS 既可以在客户端上运行 (支持 IE 6+, Webkit, Firefox)，也可以在服务端运行 (借助 Node.js)。")]),_._v(" "),v("p",[v("strong",[_._v("为什么要使用它们？")])]),_._v(" "),v("ul",[v("li",[_._v("结构清晰，便于扩展。 可以方便地屏蔽浏览器私有语法差异。封装对浏览器语法差异的重复处理， 减少无意义的机械劳动。")]),_._v(" "),v("li",[_._v("可以轻松实现多重继承。 完全兼容 CSS 代码，可以方便地应用到老项目中。LESS 只是在 CSS 语法上做了扩展，所以老的 CSS 代码也可以与 LESS 代码一同编译。")])]),_._v(" "),v("h2",{attrs:{id:"_27-对媒体查询的理解"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_27-对媒体查询的理解"}},[_._v("#")]),_._v(" 27. 对媒体查询的理解？")]),_._v(" "),v("p",[_._v("媒体查询由⼀个可选的媒体类型和零个或多个使⽤媒体功能的限制了样式表范围的表达式组成，例如宽度、⾼度和颜⾊。媒体查询，添加⾃ CSS3，允许内容的呈现针对⼀个特定范围的输出设备⽽进⾏裁剪，⽽不必改变内容本身，适合 web ⽹⻚应对不同型号的设备⽽做出对应的响应适配。")]),_._v(" "),v("p",[_._v("媒体查询包含⼀个可选的媒体类型和满⾜ CSS3 规范的条件下，包含零个或多个表达式，这些表达式描述了媒体特征，最终会被解析为 true 或 false。如果媒体查询中指定的媒体类型匹配展示⽂档所使⽤的设备类型，并且所有的表达式的值都是 true，那么该媒体查询的结果为 true。那么媒体查询内的样式将会⽣效。")]),_._v(" "),v("div",{staticClass:"language-css extra-class"},[v("pre",{pre:!0,attrs:{class:"language-css"}},[v("code",[_._v("\x3c!-- link元素中的CSS媒体查询 --\x3e\n<link rel="),v("span",{pre:!0,attrs:{class:"token string"}},[_._v('"stylesheet"')]),_._v(" media="),v("span",{pre:!0,attrs:{class:"token string"}},[_._v('"(max-width: 800px)"')]),_._v(" href="),v("span",{pre:!0,attrs:{class:"token string"}},[_._v('"example.css"')]),_._v(" />\n\x3c!-- 样式表中的CSS媒体查询 --\x3e\n<style>\n"),v("span",{pre:!0,attrs:{class:"token atrule"}},[v("span",{pre:!0,attrs:{class:"token rule"}},[_._v("@media")]),_._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v("(")]),v("span",{pre:!0,attrs:{class:"token property"}},[_._v("max-width")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(":")]),_._v(" 600px"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(")")])]),_._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v("{")]),_._v("\n  "),v("span",{pre:!0,attrs:{class:"token selector"}},[_._v(".facet_sidebar")]),_._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v("{")]),_._v("\n    "),v("span",{pre:!0,attrs:{class:"token property"}},[_._v("display")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(":")]),_._v(" none"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(";")]),_._v("\n  "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v("}")]),_._v("\n"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v("}")]),_._v("\n</style>\n")])])]),v("p",[_._v("简单来说，使用 @media 查询，可以针对不同的媒体类型定义不同的样式。@media 可以针对不同的屏幕尺寸设置不同的样式，特别是需要设置设计响应式的页面，@media 是非常有用的。当重置浏览器大小的过程中，页面也会根据浏览器的宽度和高度重新渲染页面。")]),_._v(" "),v("h2",{attrs:{id:"_28-对-css-工程化的理解"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_28-对-css-工程化的理解"}},[_._v("#")]),_._v(" 28. 对 CSS 工程化的理解")]),_._v(" "),v("p",[_._v("CSS 工程化是为了解决以下问题：")]),_._v(" "),v("ol",[v("li",[v("strong",[_._v("宏观设计")]),_._v("：CSS 代码如何组织、如何拆分、模块结构怎样设计？")]),_._v(" "),v("li",[v("strong",[_._v("编码优化")]),_._v("：怎样写出更好的 CSS？")]),_._v(" "),v("li",[v("strong",[_._v("构建")]),_._v("：如何处理我的 CSS，才能让它的打包结果最优？")]),_._v(" "),v("li",[v("strong",[_._v("可维护性")]),_._v("：代码写完了，如何最小化它后续的变更成本？如何确保任何一个同事都能轻松接手？")])]),_._v(" "),v("p",[_._v("以下三个方向都是时下比较流行的、普适性非常好的 CSS 工程化实践：")]),_._v(" "),v("ul",[v("li",[_._v("预处理器：Less、 Sass 等；")]),_._v(" "),v("li",[_._v("重要的工程化插件： PostCss；")]),_._v(" "),v("li",[_._v("Webpack loader 等 。")])]),_._v(" "),v("p",[_._v("基于这三个方向，可以衍生出一些具有典型意义的子问题，这里我们逐个来看：")]),_._v(" "),v("p",[v("strong",[_._v("（1）预处理器：为什么要用预处理器？它的出现是为了解决什么问题？")])]),_._v(" "),v("p",[_._v("预处理器，其实就是 CSS 世界的“轮子”。预处理器支持我们写一种类似 CSS、但实际并不是 CSS 的语言，然后把它编译成 CSS 代码：")]),_._v(" "),v("p",[v("img",{attrs:{src:"F:/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF/VuePress/Blog-VuePress/docs/htmlcss/css/assets/18.png",alt:"image"}})]),_._v(" "),v("p",[_._v("那为什么写 CSS 代码写得好好的，偏偏要转去写“类 CSS”呢？这就和本来用 JS 也可以实现所有功能，但最后却写 React 的 jsx 或者 Vue 的模板语法一样——为了爽！要想知道有了预处理器有多爽，首先要知道的是传统 CSS 有多不爽。随着前端业务复杂度的提高，前端工程中对 CSS 提出了以下的诉求：")]),_._v(" "),v("ol",[v("li",[_._v("宏观设计上：我们希望能优化 CSS 文件的目录结构，对现有的 CSS 文件实现复用；")]),_._v(" "),v("li",[_._v("编码优化上：我们希望能写出结构清晰、简明易懂的 CSS，需要它具有一目了然的嵌套层级关系，而不是无差别的一铺到底写法；我们希望它具有变量特征、计算能力、循环能力等等更强的可编程性，这样我们可以少写一些无用的代码；")]),_._v(" "),v("li",[_._v("可维护性上：更强的可编程性意味着更优质的代码结构，实现复用意味着更简单的目录结构和更强的拓展能力，这两点如果能做到，自然会带来更强的可维护性。")])]),_._v(" "),v("p",[_._v("这三点是传统 CSS 所做不到的，也正是预处理器所解决掉的问题。预处理器普遍会具备这样的特性：")]),_._v(" "),v("ul",[v("li",[_._v("嵌套代码的能力，通过嵌套来反映不同 css 属性之间的层级关系 ；")]),_._v(" "),v("li",[_._v("支持定义 css 变量；")]),_._v(" "),v("li",[_._v("提供计算函数；")]),_._v(" "),v("li",[_._v("允许对代码片段进行 extend 和 mixin；")]),_._v(" "),v("li",[_._v("支持循环语句的使用；")]),_._v(" "),v("li",[_._v("支持将 CSS 文件模块化，实现复用。")])]),_._v(" "),v("p",[v("strong",[_._v("（2）PostCss：PostCss 是如何工作的？我们在什么场景下会使用 PostCss？")])]),_._v(" "),v("p",[_._v("PostCss 仍然是一个对 CSS 进行解析和处理的工具，它会对 CSS 做这样的事情：")]),_._v(" "),v("p",[v("img",{attrs:{src:"F:/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF/VuePress/Blog-VuePress/docs/htmlcss/css/assets/19.png",alt:"img"}})]),_._v(" "),v("p",[_._v("它和预处理器的不同就在于，预处理器处理的是 类 CSS，而 PostCss 处理的就是 CSS 本身。Babel 可以将高版本的 JS 代码转换为低版本的 JS 代码。PostCss 做的是类似的事情：它可以编译尚未被浏览器广泛支持的先进的 CSS 语法，还可以自动为一些需要额外兼容的语法增加前缀。更强的是，由于 PostCss 有着强大的插件机制，支持各种各样的扩展，极大地强化了 CSS 的能力。")]),_._v(" "),v("p",[_._v("PostCss 在业务中的使用场景非常多：")]),_._v(" "),v("ul",[v("li",[_._v("提高 CSS 代码的可读性：PostCss 其实可以做类似预处理器能做的工作；")]),_._v(" "),v("li",[_._v("当我们的 CSS 代码需要适配低版本浏览器时，PostCss 的 "),v("a",{attrs:{href:"https://github.com/postcss/autoprefixer",target:"_blank",rel:"noopener noreferrer"}},[_._v("Autoprefixer"),v("OutboundLink")],1),_._v(" 插件可以帮助我们自动增加浏览器前缀；")]),_._v(" "),v("li",[_._v("允许我们编写面向未来的 CSS：PostCss 能够帮助我们编译 CSS next 代码；")])]),_._v(" "),v("p",[v("strong",[_._v("（3）Webpack 能处理 CSS 吗？如何实现？")])]),_._v(" "),v("p",[_._v("Webpack 能处理 CSS 吗：")]),_._v(" "),v("ul",[v("li",[v("strong",[_._v("Webpack 在裸奔的状态下，是不能处理 CSS 的")]),_._v("，Webpack 本身是一个面向 JavaScript 且只能处理 JavaScript 代码的模块化打包工具；")]),_._v(" "),v("li",[_._v("Webpack 在 loader 的辅助下，是可以处理 CSS 的。")])]),_._v(" "),v("p",[_._v("如何用 Webpack 实现对 CSS 的处理：")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("Webpack 中操作 CSS 需要使用的两个关键的 loader：css-loader 和 style-loader")])]),_._v(" "),v("li",[v("p",[_._v("注意，答出“用什么”有时候可能还不够，面试官会怀疑你是不是在背答案，所以你还需要了解每个 loader 都做了什么事情：")])]),_._v(" "),v("li",[v("ul",[v("li",[_._v("css-loader：导入 CSS 模块，对 CSS 代码进行编译处理；")]),_._v(" "),v("li",[_._v("style-loader：创建 style 标签，把 CSS 内容写入标签。")])])])]),_._v(" "),v("p",[_._v("在实际使用中，"),v("strong",[_._v("css-loader 的执行顺序一定要安排在 style-loader 的前面")]),_._v("。因为只有完成了编译过程，才可以对 css 代码进行插入；若提前插入了未编译的代码，那么 webpack 是无法理解这坨东西的，它会无情报错。")]),_._v(" "),v("h2",{attrs:{id:"_29-如何判断元素是否到达可视区域"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_29-如何判断元素是否到达可视区域"}},[_._v("#")]),_._v(" 29. 如何判断元素是否到达可视区域")]),_._v(" "),v("p",[_._v("以图片显示为例：")]),_._v(" "),v("ul",[v("li",[v("code",[_._v("window.innerHeight")]),_._v(" 是浏览器可视区的高度；")]),_._v(" "),v("li",[v("code",[_._v("document.body.scrollTop || document.documentElement.scrollTop")]),_._v(" 是浏览器滚动的过的距离；")]),_._v(" "),v("li",[v("code",[_._v("imgs.offsetTop")]),_._v(" 是元素顶部距离文档顶部的高度（包括滚动条的距离）；")]),_._v(" "),v("li",[_._v("内容达到显示区域的："),v("code",[_._v("img.offsetTop < window.innerHeight + document.body.scrollTop;")])])]),_._v(" "),v("p",[v("img",{attrs:{src:"F:/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF/VuePress/Blog-VuePress/docs/htmlcss/css/assets/20.png",alt:"img"}})]),_._v(" "),v("h2",{attrs:{id:"_30-z-index-属性在什么情况下会失效"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_30-z-index-属性在什么情况下会失效"}},[_._v("#")]),_._v(" 30. z-index 属性在什么情况下会失效")]),_._v(" "),v("p",[_._v("通常 z-index 的使用是在有两个重叠的标签，在一定的情况下控制其中一个在另一个的上方或者下方出现。z-index 值越大就越是在上层。z-index 元素的 position 属性需要是 relative，absolute 或是 fixed。")]),_._v(" "),v("p",[_._v("z-index 属性在下列情况下会失效：")]),_._v(" "),v("ul",[v("li",[_._v("父元素 position 为 relative 时，子元素的 z-index 失效。解决：父元素 position 改为 absolute 或 static；")]),_._v(" "),v("li",[_._v("元素没有设置 position 属性为非 static 属性。解决：设置该元素的 position 属性为 relative，absolute 或是 fixed 中的一种；")]),_._v(" "),v("li",[_._v("元素在设置 z-index 的同时还设置了 float 浮动。解决：float 去除，改为 display：inline-block；")])]),_._v(" "),v("h2",{attrs:{id:"_31-css3-中的-transform-有哪些属性"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_31-css3-中的-transform-有哪些属性"}},[_._v("#")]),_._v(" 31. CSS3 中的 transform 有哪些属性")]),_._v(" "),v("ul",[v("li",[_._v("translate 位移")]),_._v(" "),v("li",[_._v("rotate 旋转")]),_._v(" "),v("li",[_._v("scale 缩放")]),_._v(" "),v("li",[_._v("skew 斜切")])]),_._v(" "),v("blockquote",[v("p",[_._v("更多细节补充：")])]),_._v(" "),v("blockquote",[v("p",[_._v("参考 "),v("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/CSS/transform",target:"_blank",rel:"noopener noreferrer"}},[_._v("MDN 文档"),v("OutboundLink")],1),_._v(" "),v("a",{attrs:{href:"https://www.runoob.com/cssref/css3-pr-transform.html",target:"_blank",rel:"noopener noreferrer"}},[_._v("菜鸟教程"),v("OutboundLink")],1)])]),_._v(" "),v("p",[_._v("CSS**"),v("code",[_._v("transform")]),_._v("**属性允许你"),v("u",[_._v("旋转，缩放，倾斜或平移")]),_._v("给定元素。这是通过修改 CSS 视觉格式化模型的坐标空间来实现的。"),v("code",[_._v("transform")]),_._v("属性可以指定为关键字值"),v("code",[_._v("none")]),_._v(" 或一个或多个"),v("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/CSS/transform-function",target:"_blank",rel:"noopener noreferrer"}},[v("code",[_._v("<transform-function>")]),v("OutboundLink")],1),_._v("值。")]),_._v(" "),v("p",[v("strong",[v("code",[_._v("<transform-function>")])]),_._v(" CSS 数据类型用于对元素的显示做变换。通常，这种变换可以由矩阵表示，并且可以使用每个点上的矩阵乘法来确定所得到的图像。下面简单展示下"),v("code",[_._v("<transform-function>")]),_._v("值都有哪些（来自菜鸟教程，如果想要了解细则请点击"),v("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/CSS/transform-function",target:"_blank",rel:"noopener noreferrer"}},[_._v("这里"),v("OutboundLink")],1),_._v("进入 MDN 官方文档）")]),_._v(" "),v("table",[v("thead",[v("tr",[v("th",[_._v("none")]),_._v(" "),v("th",[_._v("定义不进行转换。")])])]),_._v(" "),v("tbody",[v("tr",[v("td",[v("strong",[_._v("matrix("),v("em",[_._v("n")]),_._v(","),v("em",[_._v("n")]),_._v(","),v("em",[_._v("n")]),_._v(","),v("em",[_._v("n")]),_._v(","),v("em",[_._v("n")]),_._v(","),v("em",[_._v("n")]),_._v(")")])]),_._v(" "),v("td",[_._v("定义 2D 转换，使用六个值的矩阵。")])]),_._v(" "),v("tr",[v("td",[_._v("matrix3d("),v("em",[_._v("n")]),_._v(","),v("em",[_._v("n")]),_._v(","),v("em",[_._v("n")]),_._v(","),v("em",[_._v("n")]),_._v(","),v("em",[_._v("n")]),_._v(","),v("em",[_._v("n")]),_._v(","),v("em",[_._v("n")]),_._v(","),v("em",[_._v("n")]),_._v(","),v("em",[_._v("n")]),_._v(","),v("em",[_._v("n")]),_._v(","),v("em",[_._v("n")]),_._v(","),v("em",[_._v("n")]),_._v(","),v("em",[_._v("n")]),_._v(","),v("em",[_._v("n")]),_._v(","),v("em",[_._v("n")]),_._v(","),v("em",[_._v("n")]),_._v(")")]),_._v(" "),v("td",[_._v("定义 3D 转换，使用 16 个值的 4x4 矩阵。")])]),_._v(" "),v("tr",[v("td",[v("strong",[_._v("translate("),v("em",[_._v("x")]),_._v(","),v("em",[_._v("y")]),_._v(")")])]),_._v(" "),v("td",[_._v("定义 2D 转换。（平移）")])]),_._v(" "),v("tr",[v("td",[_._v("translate3d("),v("em",[_._v("x")]),_._v(","),v("em",[_._v("y")]),_._v(","),v("em",[_._v("z")]),_._v(")")]),_._v(" "),v("td",[_._v("定义 3D 转换。")])]),_._v(" "),v("tr",[v("td",[_._v("translateX("),v("em",[_._v("x")]),_._v(")")]),_._v(" "),v("td",[_._v("定义转换，只是用 X 轴的值。")])]),_._v(" "),v("tr",[v("td",[_._v("translateY("),v("em",[_._v("y")]),_._v(")")]),_._v(" "),v("td",[_._v("定义转换，只是用 Y 轴的值。")])]),_._v(" "),v("tr",[v("td",[_._v("translateZ("),v("em",[_._v("z")]),_._v(")")]),_._v(" "),v("td",[_._v("定义 3D 转换，只是用 Z 轴的值。")])]),_._v(" "),v("tr",[v("td",[v("strong",[_._v("scale("),v("em",[_._v("x")]),_._v(","),v("em",[_._v("y")]),_._v(")")])]),_._v(" "),v("td",[_._v("定义 2D 缩放转换。")])]),_._v(" "),v("tr",[v("td",[_._v("scale3d("),v("em",[_._v("x")]),_._v(","),v("em",[_._v("y")]),_._v(","),v("em",[_._v("z")]),_._v(")")]),_._v(" "),v("td",[_._v("定义 3D 缩放转换。")])]),_._v(" "),v("tr",[v("td",[_._v("scaleX("),v("em",[_._v("x")]),_._v(")")]),_._v(" "),v("td",[_._v("通过设置 X 轴的值来定义缩放转换。")])]),_._v(" "),v("tr",[v("td",[_._v("scaleY("),v("em",[_._v("y")]),_._v(")")]),_._v(" "),v("td",[_._v("通过设置 Y 轴的值来定义缩放转换。")])]),_._v(" "),v("tr",[v("td",[_._v("scaleZ("),v("em",[_._v("z")]),_._v(")")]),_._v(" "),v("td",[_._v("通过设置 Z 轴的值来定义 3D 缩放转换。")])]),_._v(" "),v("tr",[v("td",[v("strong",[_._v("rotate("),v("em",[_._v("angle")]),_._v(")")])]),_._v(" "),v("td",[_._v("定义 2D 旋转，在参数中规定角度。")])]),_._v(" "),v("tr",[v("td",[_._v("rotate3d("),v("em",[_._v("x")]),_._v(","),v("em",[_._v("y")]),_._v(","),v("em",[_._v("z")]),_._v(","),v("em",[_._v("angle")]),_._v(")")]),_._v(" "),v("td",[_._v("定义 3D 旋转。")])]),_._v(" "),v("tr",[v("td",[_._v("rotateX("),v("em",[_._v("angle")]),_._v(")")]),_._v(" "),v("td",[_._v("定义沿着 X 轴的 3D 旋转。")])]),_._v(" "),v("tr",[v("td",[_._v("rotateY("),v("em",[_._v("angle")]),_._v(")")]),_._v(" "),v("td",[_._v("定义沿着 Y 轴的 3D 旋转。")])]),_._v(" "),v("tr",[v("td",[_._v("rotateZ("),v("em",[_._v("angle")]),_._v(")")]),_._v(" "),v("td",[_._v("定义沿着 Z 轴的 3D 旋转。")])]),_._v(" "),v("tr",[v("td",[v("strong",[_._v("skew("),v("em",[_._v("x-angle")]),_._v(","),v("em",[_._v("y-angle")]),_._v(")")])]),_._v(" "),v("td",[_._v("定义沿着 X 和 Y 轴的 2D 倾斜转换。")])]),_._v(" "),v("tr",[v("td",[_._v("skewX("),v("em",[_._v("angle")]),_._v(")")]),_._v(" "),v("td",[_._v("定义沿着 X 轴的 2D 倾斜转换。")])]),_._v(" "),v("tr",[v("td",[_._v("skewY("),v("em",[_._v("angle")]),_._v(")")]),_._v(" "),v("td",[_._v("定义沿着 Y 轴的 2D 倾斜转换。")])]),_._v(" "),v("tr",[v("td",[_._v("perspective("),v("em",[_._v("n")]),_._v(")")]),_._v(" "),v("td",[_._v("为 3D 转换元素定义透视视图。")])])])])])}),[],!1,null,null,null);t.default=e.exports}}]);