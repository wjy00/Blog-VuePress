(window.webpackJsonp=window.webpackJsonp||[]).push([[59],{550:function(t,s,a){"use strict";a.r(s);var n=a(54),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"一、内置模块"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一、内置模块"}},[t._v("#")]),t._v(" 一、内置模块")]),t._v(" "),a("h2",{attrs:{id:"_1-http模块"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-http模块"}},[t._v("#")]),t._v(" 1. HTTP模块")]),t._v(" "),a("blockquote",[a("p",[t._v("http 模块是 Node.js 官方提供的、用来创建 web 服务器的模块。通过 http 模块提供的 http.createServer() 方法，就能方便的把一台普通的电脑，变成一台 Web 服务器，从而对外提供 Web 资源服务。")])]),t._v(" "),a("h3",{attrs:{id:"_1-1-引入http模块"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-引入http模块"}},[t._v("#")]),t._v(" 1.1 引入http模块")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" http "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h3",{attrs:{id:"_1-2-创建服务器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-创建服务器"}},[t._v("#")]),t._v(" 1.2 创建服务器")]),t._v(" "),a("p",[t._v("使用 "),a("code",[t._v("http.createServer()")]),t._v(" 方法创建服务器，并使用"),a("code",[t._v("listen")]),t._v("方法绑定端口。")]),t._v(" "),a("p",[t._v("函数通过 "),a("code",[t._v("request, response")]),t._v("参数来接收和响应数据。")]),t._v(" "),a("p",[t._v("在VSCode中安装  "),a("code",[t._v("node-snippets")]),t._v("  插件后，可以使用"),a("code",[t._v("httpserver")]),t._v("快速创建一个服务器模板。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" http "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'http'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n\nhttp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createServer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("res"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" req")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// req 表示请求，res 表示响应")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 设置 HTTP 头部，状态码是 200 (表示成功)，文件类型是 html，字符集是 utf8 ")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 手动设置内容的编码格式为 utf-8 可以解决中文乱码的问题")]),t._v("\n    res"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("writeHead")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Content-Type"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"text/html; charset=utf-8"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// 发送响应数据 "Hello World", end方法使 Web 服务器停止处理脚本并返回当前结果')]),t._v("\n    res"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("end")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello World"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("listen")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8081")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 终端打印如下信息")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Server running at http://127.0.0.1:8081/'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h2",{attrs:{id:"_2-fs模块"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-fs模块"}},[t._v("#")]),t._v(" 2. fs模块")]),t._v(" "),a("blockquote",[a("p",[t._v("fs 模块是 Node.js 官方提供的、用来操作文件的模块。它提供了一系列的方法和属性，用来满足用户对文件的操作需求。")])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("方法")]),t._v(" "),a("th",[t._v("功能")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("strong",[t._v("fs.readFile")])]),t._v(" "),a("td",[t._v("读取文件")])]),t._v(" "),a("tr",[a("td",[a("strong",[t._v("fs.writeFile")])]),t._v(" "),a("td",[t._v("创建写入文件")])]),t._v(" "),a("tr",[a("td",[t._v("fs.stat")]),t._v(" "),a("td",[t._v("检测是文件还是目录")])]),t._v(" "),a("tr",[a("td",[t._v("fs.mkdir")]),t._v(" "),a("td",[t._v("创建目录")])]),t._v(" "),a("tr",[a("td",[t._v("fs.appendFile")]),t._v(" "),a("td",[t._v("追加文件")])]),t._v(" "),a("tr",[a("td",[t._v("fs.readdir")]),t._v(" "),a("td",[t._v("读取目录")])]),t._v(" "),a("tr",[a("td",[t._v("fs.rename")]),t._v(" "),a("td",[t._v("重命名")])]),t._v(" "),a("tr",[a("td",[t._v("fs.rmdir")]),t._v(" "),a("td",[t._v("删除目录")])]),t._v(" "),a("tr",[a("td",[t._v("fs.unlink")]),t._v(" "),a("td",[t._v("删除文件")])]),t._v(" "),a("tr",[a("td",[t._v("fs.createReadStream")]),t._v(" "),a("td",[t._v("从文件流中读取数据")])]),t._v(" "),a("tr",[a("td",[t._v("fs.createWriteStream")]),t._v(" "),a("td",[t._v("创建一个可写流文件")])])])]),t._v(" "),a("h3",{attrs:{id:"_2-1-fs-readfile"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-fs-readfile"}},[t._v("#")]),t._v(" 2.1 fs.readFile()")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("fs.readFile(path[, options], callback)\n")])])]),a("ul",[a("li",[a("p",[t._v("参数1：必选参数，字符串，表示文件的路径。")])]),t._v(" "),a("li",[a("p",[t._v("参数2：可选参数，表示以什么编码格式来读取文件。")])]),t._v(" "),a("li",[a("p",[t._v("参数3：必选参数，文件读取完成后，通过回调函数拿到读取的结果。")])])]),t._v(" "),a("p",[a("strong",[t._v("使用示例：")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("const fs = require('fs')\n\nfs.readFile('./1.txt', 'utf-8', function(err, res) {\n\tif (err) {\n\t\treturn console.log('读取失败:' + err.message)\n\t}\n\tconsole.log('读取成功:' + res)\n})\n")])])]),a("h3",{attrs:{id:"_2-2-fs-writefile"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-fs-writefile"}},[t._v("#")]),t._v(" 2.2 fs.writeFile()")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("fs.writeFile(path, data[, options], callback)\n")])])]),a("ul",[a("li",[a("p",[t._v("参数1：必选参数，需要指定一个文件路径的字符串，表示文件的存放路径。")])]),t._v(" "),a("li",[a("p",[t._v("参数2：必选参数，表示要写入的内容。")])]),t._v(" "),a("li",[a("p",[t._v("参数3：可选参数，表示以什么格式写入文件内容，默认值是 utf8。")])]),t._v(" "),a("li",[a("p",[t._v("参数4：必选参数，文件写入完成后的回调函数。")])])]),t._v(" "),a("p",[a("strong",[t._v("使用示例：")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("const fs = require('fs')\n\nfs.writeFile('E:/files/2.txt', 'Hello World', function(err) {\n\tif (err) {\n\t\treturn console.log('写入失败:' + err.message)\n\t}\n\tconsole.log('写入成功!')\n})\n")])])]),a("h3",{attrs:{id:"_2-3-管道流的方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-管道流的方法"}},[t._v("#")]),t._v(" 2.3 管道流的方法")]),t._v(" "),a("p",[t._v("我们可以通过一下管道流的方法，读取一个文件内容并将内容写入到另外一个文件中：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" fs "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"fs"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建一个可读流 ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" readerStream "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" fs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createReadStream")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'input.txt'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建一个可写流 ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" writerStream "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" fs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createWriteStream")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'output.txt'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 管道读写操作 ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 读取 input.txt 文件内容，并将内容写入到 output.txt 文件中 ")]),t._v("\nreaderStream"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("pipe")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("writerStream"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"程序执行完毕"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"_2-4-fs模块路径动态拼接问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-fs模块路径动态拼接问题"}},[t._v("#")]),t._v(" 2.4 fs模块路径动态拼接问题")]),t._v(" "),a("blockquote",[a("p",[t._v("代码在运行的时候，会以执行 node 命令时所处的目录，动态拼接出被操作文件的完整路径。")])]),t._v(" "),a("p",[a("code",[t._v("__dirname")]),t._v("表示当前文件所处的目录，使用 "),a("code",[t._v("__dirname")]),t._v("拼接路径就能解决该问题。通常使用"),a("code",[t._v("path.join()")]),t._v("来实现路径的拼接。")]),t._v(" "),a("h2",{attrs:{id:"_3-path模块"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-path模块"}},[t._v("#")]),t._v(" 3. path模块")]),t._v(" "),a("blockquote",[a("p",[t._v("path 模块是 Node.js 官方提供的、用来处理路径的模块。它提供了一系列的方法和属性，用来满足用户对路径的处理需求。")])]),t._v(" "),a("h3",{attrs:{id:"_3-1-path-join-路径拼接"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-path-join-路径拼接"}},[t._v("#")]),t._v(" 3.1 path.join() 路径拼接")]),t._v(" "),a("blockquote",[a("p",[t._v("使用 "),a("code",[t._v("path.join()")]),t._v(" 方法，可以把多个路径片段拼接为完整的路径字符串，语法格式如下：")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("path"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("join")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("paths"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("ul",[a("li",[t._v("参数1： 可选参数，表示路径片段的序列。")]),t._v(" "),a("li",[t._v("返回值：返回拼接后的路径。")])]),t._v(" "),a("p",[a("strong",[t._v("使用示例：")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" path "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'path'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// '../'会抵消前面的路径")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" pathStr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" path"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("join")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/a'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/b/c'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'../'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./d'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'e'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pathStr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 输出 \\a\\b\\d\\e")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" pathStr2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" path"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("join")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("__dirname"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./files/1.txt'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pathStr2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 输出 当前文件路径\\files\\1.txt'")]),t._v("\n")])])]),a("p",[t._v("所以常用 path.join() 来拼接路径代替字符串拼接。")]),t._v(" "),a("h3",{attrs:{id:"_3-2-path-basename-获取路径中的文件名"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-path-basename-获取路径中的文件名"}},[t._v("#")]),t._v(" 3.2 path.basename() 获取路径中的文件名")]),t._v(" "),a("blockquote",[a("p",[t._v("使用"),a("code",[t._v("path.basename()")]),t._v("方法，可以获取路径中的最后一部分，经常通过这个方法获取路径中的文件名，语法格式如下：")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("path"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("basename")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("path"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ext"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("ul",[a("li",[t._v("参数1：必选参数，表示一个路径的字符串。")]),t._v(" "),a("li",[t._v("参数2：可选参数，表示文件扩展名。")]),t._v(" "),a("li",[t._v("返回值： 返回路径中的文件名。")])]),t._v(" "),a("p",[a("strong",[t._v("使用示例：")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" path "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'path'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" fpath "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/a/b/c/index.html'")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" fullName "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" path"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("basename")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fpath"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fullName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 输出 index.html")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" nameWithoutExt "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" path"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("basename")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fpath"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'.html'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nameWithoutExt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 输出 index")]),t._v("\n")])])]),a("h3",{attrs:{id:"_3-3-path-extname-获取路径中的文件扩展名"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-path-extname-获取路径中的文件扩展名"}},[t._v("#")]),t._v(" 3.3  path.extname() 获取路径中的文件扩展名")]),t._v(" "),a("blockquote",[a("p",[t._v("使用 path.extname() 方法，可以获取路径中的扩展名部分，语法格式如下：")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("path"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("extname")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("path"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("ul",[a("li",[a("p",[t._v("参数1：必选参数，表示一个路径的字符串。")])]),t._v(" "),a("li",[a("p",[t._v("返回值： 返回得到的扩展名字符串。")])])]),t._v(" "),a("p",[a("strong",[t._v("使用示例：")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" path "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'path'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" fpath "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/a/b/c/index.html'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" ext "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" path"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("extname")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fpath"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ext"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 输出 .html")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);